{"version":3,"file":"core.js","sources":["../src/core/AudioManager.ts","../node_modules/fft.js/lib/fft.js","../node_modules/pitchy/index.js","../src/core/PitchDetector.ts","../src/core/NoiseFilter.ts","../src/core/MicrophoneLifecycleManager.ts","../src/core/ErrorNotificationSystem.ts","../src/core/MicrophoneController.ts"],"sourcesContent":["/**\n * AudioManager - Framework-agnostic Global Audio Resource Management System\n * \n * Purpose: Solve multiple AudioContext issues\n * - Share single AudioContext across entire application\n * - Reuse single MediaStream across all components\n * - Safe resource management and cleanup\n */\n\nimport type { \n  AudioManagerConfig, \n  MediaStreamResources, \n  HealthStatus, \n  TrackState,\n  DeviceSpecs\n} from '../types';\n\nexport class AudioManager {\n  // Global shared resources\n  private audioContext: AudioContext | null = null;\n  private mediaStream: MediaStream | null = null;\n  private sourceNode: MediaStreamAudioSourceNode | null = null;\n  private gainNode: GainNode | null = null; // For microphone sensitivity adjustment\n  \n  // Analyser management\n  private analysers = new Map<string, AnalyserNode>();\n  private filters = new Map<string, { highpass: BiquadFilterNode; lowpass: BiquadFilterNode; notch: BiquadFilterNode }>();\n  \n  // Reference counting (for safe cleanup)\n  private refCount = 0;\n  private initPromise: Promise<MediaStreamResources> | null = null; // Prevent duplicate initialization\n  \n  // State management\n  private isInitialized = false;\n  private lastError: Error | null = null;\n  \n  // Sensitivity settings (iPad compatibility)\n  private currentSensitivity: number; // Device-dependent default sensitivity\n  \n  // Configuration\n  private config: AudioManagerConfig;\n\n  constructor(config: AudioManagerConfig = {}) {\n    this.config = {\n      sampleRate: 44100,\n      channelCount: 1,\n      echoCancellation: false,\n      noiseSuppression: false,\n      autoGainControl: false,\n      latency: 0.1,\n      ...config\n    };\n    \n    this.currentSensitivity = this._getDefaultSensitivity();\n  }\n\n  /**\n   * Get device-dependent default sensitivity\n   */\n  private _getDefaultSensitivity(): number {\n    const deviceSpecs = this.getPlatformSpecs();\n    \n    switch (deviceSpecs.deviceType) {\n      case 'iPad':\n        console.log('üîß [AudioManager] iPad detected - setting default sensitivity 7.0x');\n        return 7.0;\n      case 'iPhone':\n        console.log('üîß [AudioManager] iPhone detected - setting default sensitivity 3.0x');\n        return 3.0;\n      default:\n        console.log('üîß [AudioManager] PC detected - setting default sensitivity 1.0x');\n        return 1.0;\n    }\n  }\n\n  /**\n   * Initialize audio resources\n   * Safe to call multiple times (singleton-like behavior)\n   */\n  async initialize(): Promise<MediaStreamResources> {\n    // If already initializing, wait for completion\n    if (this.initPromise) {\n      return this.initPromise;\n    }\n\n    // If already initialized - perform MediaStream health check\n    if (this.isInitialized && this.audioContext && this.mediaStream) {\n      const healthCheck = this.checkMediaStreamHealth();\n      \n      if (healthCheck.healthy) {\n        this.refCount++;\n        return {\n          audioContext: this.audioContext,\n          mediaStream: this.mediaStream,\n          sourceNode: this.sourceNode!\n        };\n      } else {\n        // Force re-initialization if MediaStream is unhealthy\n        console.warn('‚ö†Ô∏è [AudioManager] Unhealthy MediaStream detected - force re-initialization:', healthCheck);\n        console.log('üîÑ [AudioManager] Unhealthy MediaStream details:', {\n          mediaStreamActive: this.mediaStream?.active,\n          trackCount: this.mediaStream?.getTracks().length,\n          trackStates: this.mediaStream?.getTracks().map(t => ({\n            kind: t.kind,\n            readyState: t.readyState,\n            enabled: t.enabled,\n            muted: t.muted\n          }))\n        });\n        \n        // Perform safe cleanup\n        this._cleanup();\n        this.isInitialized = false;\n        this.refCount = 0;\n        \n        // Short wait to ensure resource release\n        await new Promise(resolve => setTimeout(resolve, 100));\n        \n        console.log('üîÑ [AudioManager] Cleanup complete - starting re-initialization');\n        // Continue to next block for re-initialization\n      }\n    }\n\n    // Execute initialization\n    this.initPromise = this._doInitialize();\n    \n    try {\n      const result = await this.initPromise;\n      this.initPromise = null;\n      return result;\n    } catch (error) {\n      this.initPromise = null;\n      throw error;\n    }\n  }\n\n  /**\n   * Actual initialization process\n   */\n  private async _doInitialize(): Promise<MediaStreamResources> {\n    try {\n      console.log('üé§ [AudioManager] Starting initialization');\n\n      // Create AudioContext (single instance)\n      if (!this.audioContext) {\n        this.audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n        console.log('‚úÖ [AudioManager] AudioContext creation complete');\n      }\n\n      // Resume AudioContext if suspended\n      if (this.audioContext.state === 'suspended') {\n        await this.audioContext.resume();\n        console.log('‚úÖ [AudioManager] AudioContext resume complete');\n      }\n\n      // Get MediaStream (single instance)\n      if (!this.mediaStream) {\n        const deviceSpecs = this.getPlatformSpecs();\n        \n        console.log(`üîç [AudioManager] Device detection: ${deviceSpecs.deviceType}`, navigator.userAgent);\n        console.log(`üîç [AudioManager] Touch support: ${'ontouchend' in document}`);\n        \n        // Safari WebKit compatibility: Maximum compatibility audio settings\n        const audioConstraints: MediaStreamConstraints = {\n          audio: {\n            // Basic settings: Safari WebKit stability focused\n            echoCancellation: this.config.echoCancellation,\n            noiseSuppression: this.config.noiseSuppression,\n            autoGainControl: this.config.autoGainControl,\n            \n            // iOS specific: Ultra high sensitivity settings\n            ...(deviceSpecs.isIOS && {\n              googAutoGainControl: false,     // Google AGC complete disable\n              googNoiseSuppression: false,    // Google noise suppression disable\n              googEchoCancellation: false,    // Google echo cancellation disable\n              googHighpassFilter: false,      // Google highpass filter disable\n              googTypingNoiseDetection: false, // Typing noise detection disable\n              googBeamforming: false,         // Beamforming disable\n              mozAutoGainControl: false,      // Mozilla AGC disable\n              mozNoiseSuppression: false,     // Mozilla noise suppression disable\n            } as any),\n            \n            // Safari compatibility: Explicit quality settings\n            sampleRate: this.config.sampleRate,\n            channelCount: this.config.channelCount,\n            sampleSize: 16,\n            \n            // Safari WebKit additional stabilization settings\n            latency: this.config.latency,  // 100ms latency tolerance\n            volume: 1.0,   // Volume normalization\n            \n            // Flexible device selection (Safari compatibility)\n            deviceId: { ideal: 'default' }\n          }\n        };\n        \n        console.log('üé§ [AudioManager] Getting MediaStream with Safari-compatible settings:', audioConstraints);\n        this.mediaStream = await navigator.mediaDevices.getUserMedia(audioConstraints);\n        console.log('‚úÖ [AudioManager] MediaStream acquisition complete');\n      }\n\n      // Create SourceNode (single instance)\n      if (!this.sourceNode) {\n        this.sourceNode = this.audioContext.createMediaStreamSource(this.mediaStream);\n        console.log('‚úÖ [AudioManager] SourceNode creation complete');\n        \n        // MediaStream state check\n        const tracks = this.mediaStream.getTracks();\n        console.log('üé§ [AudioManager] MediaStream tracks:', tracks.map(t => ({\n          kind: t.kind,\n          label: t.label,\n          enabled: t.enabled,\n          readyState: t.readyState,\n          muted: t.muted\n        })));\n      }\n\n      // Create GainNode (for microphone sensitivity adjustment)\n      if (!this.gainNode) {\n        this.gainNode = this.audioContext.createGain();\n        this.gainNode.gain.value = this.currentSensitivity;\n        \n        // Connect SourceNode -> GainNode\n        this.sourceNode.connect(this.gainNode);\n        console.log(`‚úÖ [AudioManager] GainNode creation complete (sensitivity: ${this.currentSensitivity}x)`);\n      }\n\n      this.isInitialized = true;\n      this.refCount++;\n      this.lastError = null;\n\n      console.log(`üé§ [AudioManager] Initialization complete (refCount: ${this.refCount})`);\n\n      return {\n        audioContext: this.audioContext,\n        mediaStream: this.mediaStream,\n        sourceNode: this.sourceNode\n      };\n\n    } catch (error) {\n      console.error('‚ùå [AudioManager] Initialization error:', error);\n      this.lastError = error as Error;\n      this.isInitialized = false;\n      \n      // Cleanup on error\n      this._cleanup();\n      \n      throw error;\n    }\n  }\n\n  /**\n   * Create dedicated AnalyserNode\n   * @param id - Analyser identifier\n   * @param options - Option settings\n   */\n  createAnalyser(id: string, options: {\n    fftSize?: number;\n    smoothingTimeConstant?: number;\n    minDecibels?: number;\n    maxDecibels?: number;\n    useFilters?: boolean;\n  } = {}): AnalyserNode {\n    if (!this.isInitialized || !this.audioContext || !this.sourceNode) {\n      throw new Error('AudioManager not initialized. Call initialize() first.');\n    }\n\n    // Remove existing analyser if present\n    this.removeAnalyser(id);\n\n    const {\n      fftSize = 2048,\n      smoothingTimeConstant = 0.8,\n      minDecibels = -90,\n      maxDecibels = -10,\n      useFilters = true\n    } = options;\n\n    // Create Analyser (Safari WebKit optimized)\n    const analyser = this.audioContext.createAnalyser();\n    \n    // Safari load reduction settings\n    analyser.fftSize = Math.min(fftSize, 2048); // Safari upper limit restriction\n    analyser.smoothingTimeConstant = Math.max(smoothingTimeConstant, 0.7); // Safari stabilization\n    analyser.minDecibels = Math.max(minDecibels, -80); // Safari range optimization\n    analyser.maxDecibels = Math.min(maxDecibels, -10);\n\n    let finalNode: AudioNode = this.gainNode || this.sourceNode;\n\n    // Create filter chain (optional)\n    if (useFilters) {\n      const filterChain = this._createFilterChain();\n      this.filters.set(id, filterChain);\n      \n      // Connect filter chain (starting from GainNode)\n      finalNode.connect(filterChain.highpass);\n      filterChain.highpass.connect(filterChain.lowpass);\n      filterChain.lowpass.connect(filterChain.notch);\n      filterChain.notch.connect(analyser);\n      \n      console.log(`üîß [AudioManager] Filtered Analyser created: ${id}`);\n    } else {\n      // Direct connection (signal from GainNode)\n      finalNode.connect(analyser);\n      console.log(`üîß [AudioManager] Raw signal Analyser created: ${id}`);\n    }\n    \n    // Important: Analyser only passes audio through, don't connect to destination\n    // (prevents microphone feedback)\n\n    this.analysers.set(id, analyser);\n    return analyser;\n  }\n\n  /**\n   * Create 3-stage noise reduction filter chain\n   */\n  private _createFilterChain() {\n    if (!this.audioContext) {\n      throw new Error('AudioContext not available');\n    }\n\n    // 1. Highpass filter (remove low frequency noise: cut below 80Hz)\n    const highpass = this.audioContext.createBiquadFilter();\n    highpass.type = 'highpass';\n    highpass.frequency.setValueAtTime(80, this.audioContext.currentTime);\n    highpass.Q.setValueAtTime(0.7, this.audioContext.currentTime);\n\n    // 2. Lowpass filter (remove high frequency noise: cut above 800Hz)\n    const lowpass = this.audioContext.createBiquadFilter();\n    lowpass.type = 'lowpass';\n    lowpass.frequency.setValueAtTime(800, this.audioContext.currentTime);\n    lowpass.Q.setValueAtTime(0.7, this.audioContext.currentTime);\n\n    // 3. Notch filter (remove power noise: 60Hz)\n    const notch = this.audioContext.createBiquadFilter();\n    notch.type = 'notch';\n    notch.frequency.setValueAtTime(60, this.audioContext.currentTime);\n    notch.Q.setValueAtTime(10, this.audioContext.currentTime);\n\n    return { highpass, lowpass, notch };\n  }\n\n  /**\n   * Remove specific analyser\n   */\n  removeAnalyser(id: string): void {\n    if (this.analysers.has(id)) {\n      const analyser = this.analysers.get(id)!;\n      analyser.disconnect();\n      this.analysers.delete(id);\n      console.log(`üóëÔ∏è [AudioManager] Analyser removed: ${id}`);\n    }\n\n    if (this.filters.has(id)) {\n      const filterChain = this.filters.get(id)!;\n      filterChain.highpass.disconnect();\n      filterChain.lowpass.disconnect();\n      filterChain.notch.disconnect();\n      this.filters.delete(id);\n      console.log(`üóëÔ∏è [AudioManager] Filter chain removed: ${id}`);\n    }\n  }\n\n  /**\n   * Adjust microphone sensitivity\n   * @param sensitivity - Sensitivity multiplier (0.1 ~ 10.0)\n   */\n  setSensitivity(sensitivity: number): void {\n    // Range limit (extended to 10.0x for iPad real device support)\n    const clampedSensitivity = Math.max(0.1, Math.min(10.0, sensitivity));\n    \n    if (this.gainNode) {\n      this.gainNode.gain.value = clampedSensitivity;\n      this.currentSensitivity = clampedSensitivity;\n      console.log(`üé§ [AudioManager] Microphone sensitivity updated: ${clampedSensitivity.toFixed(1)}x`);\n    } else {\n      // If GainNode not initialized, save setting only\n      this.currentSensitivity = clampedSensitivity;\n      console.log(`üé§ [AudioManager] Microphone sensitivity set (awaiting initialization): ${clampedSensitivity.toFixed(1)}x`);\n    }\n  }\n\n  /**\n   * Get current microphone sensitivity\n   */\n  getSensitivity(): number {\n    return this.currentSensitivity;\n  }\n\n  /**\n   * Get platform-specific settings according to specification\n   * Complies with MICROPHONE_PLATFORM_SPECIFICATIONS.md\n   */\n  getPlatformSpecs(): DeviceSpecs {\n    // Device detection (unified version)\n    const isIPhone = /iPhone/.test(navigator.userAgent);\n    const isIPad = /iPad/.test(navigator.userAgent);\n    const isIPadOS = /Macintosh/.test(navigator.userAgent) && 'ontouchend' in document;\n    const isIOS = isIPhone || isIPad || isIPadOS;\n    \n    // Specification-compliant parameters\n    const deviceType = (isIPad || isIPadOS) ? 'iPad' : isIPhone ? 'iPhone' : 'PC';\n    \n    return {\n      deviceType,\n      isIOS,\n      \n      // Volume calculation divisor (important: this value determines sensitivity)\n      divisor: isIOS ? 4.0 : 6.0,           // iPhone/iPad: 4.0, PC: 6.0\n      \n      // Volume correction (iPhone/iPad low frequency cut response)  \n      gainCompensation: isIOS ? 1.5 : 1.0,  // iPhone/iPad: 1.5, PC: 1.0\n      \n      // Noise threshold (basis for 0% display during silence)\n      noiseThreshold: isIOS ? 12 : 15,      // iPhone/iPad: 12, PC: 15\n      \n      // Smoothing (minimal)\n      smoothingFactor: 0.2,                 // Common to both platforms\n      \n      // Additional device-specific settings\n      sensitivity: this.currentSensitivity,\n      noiseGate: isIOS ? 0.01 : 0.02\n    };\n  }\n\n  /**\n   * Decrement reference count and cleanup\n   */\n  release(analyserIds: string[] = []): void {\n    // Remove specified analysers\n    analyserIds.forEach(id => this.removeAnalyser(id));\n\n    this.refCount = Math.max(0, this.refCount - 1);\n    console.log(`üìâ [AudioManager] Reference count decremented: ${this.refCount}`);\n\n    // Full cleanup only when no one is using it\n    if (this.refCount <= 0) {\n      console.log('üßπ [AudioManager] Starting full resource cleanup');\n      this._cleanup();\n    }\n  }\n\n  /**\n   * Force cleanup (for emergency use)\n   */\n  forceCleanup(): void {\n    console.log('üö® [AudioManager] Force cleanup executed');\n    this._cleanup();\n  }\n\n  /**\n   * Internal cleanup process\n   */\n  private _cleanup(): void {\n    console.log('üßπ [AudioManager] Starting cleanup');\n    \n    // Remove all analysers\n    for (const id of this.analysers.keys()) {\n      this.removeAnalyser(id);\n    }\n\n    // Stop MediaStream (health check compatible)\n    if (this.mediaStream) {\n      const tracks = this.mediaStream.getTracks();\n      console.log(`üõë [AudioManager] Stopping MediaStream: ${tracks.length} tracks`);\n      \n      tracks.forEach((track, index) => {\n        try {\n          if (track.readyState !== 'ended') {\n            track.stop();\n            console.log(`üõë [AudioManager] Track ${index} stop complete`);\n          } else {\n            console.log(`‚ö†Ô∏è [AudioManager] Track ${index} already ended`);\n          }\n        } catch (error) {\n          console.warn(`‚ö†Ô∏è [AudioManager] Track ${index} stop error:`, error);\n        }\n      });\n      \n      this.mediaStream = null;\n    }\n\n    // Close AudioContext\n    if (this.audioContext && this.audioContext.state !== 'closed') {\n      try {\n        this.audioContext.close();\n        console.log('üõë [AudioManager] AudioContext close complete');\n      } catch (error) {\n        console.warn('‚ö†Ô∏è [AudioManager] AudioContext close error:', error);\n      }\n      this.audioContext = null;\n    }\n\n    // Remove GainNode\n    if (this.gainNode) {\n      this.gainNode.disconnect();\n      this.gainNode = null;\n    }\n\n    // Remove SourceNode\n    if (this.sourceNode) {\n      this.sourceNode.disconnect();\n      this.sourceNode = null;\n    }\n\n    // Reset state\n    this.isInitialized = false;\n    this.refCount = 0;\n    this.initPromise = null;\n    this.currentSensitivity = this._getDefaultSensitivity(); // Reset to device-dependent default sensitivity\n\n    console.log('‚úÖ [AudioManager] Cleanup complete');\n  }\n\n  /**\n   * Get current status (for debugging)\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      refCount: this.refCount,\n      audioContextState: this.audioContext?.state || 'none',\n      mediaStreamActive: this.mediaStream?.active || false,\n      activeAnalysers: Array.from(this.analysers.keys()),\n      activeFilters: Array.from(this.filters.keys()),\n      lastError: this.lastError,\n      currentSensitivity: this.currentSensitivity\n    };\n  }\n\n  /**\n   * MediaStream health status check\n   */\n  checkMediaStreamHealth(): HealthStatus {\n    if (!this.mediaStream) {\n      return { \n        mediaStreamActive: false,\n        audioContextState: this.audioContext?.state || 'none',\n        trackStates: [],\n        healthy: false\n      };\n    }\n\n    // MediaStream state check (Safari compatibility enhanced)\n    if (!this.mediaStream.active) {\n      return {\n        mediaStreamActive: false,\n        audioContextState: this.audioContext?.state || 'none',\n        trackStates: [],\n        healthy: false\n      };\n    }\n\n    const tracks = this.mediaStream.getTracks();\n    if (tracks.length === 0) {\n      return {\n        mediaStreamActive: this.mediaStream.active,\n        audioContextState: this.audioContext?.state || 'none',\n        trackStates: [],\n        healthy: false\n      };\n    }\n\n    const audioTrack = tracks.find(track => track.kind === 'audio');\n    if (!audioTrack) {\n      return {\n        mediaStreamActive: this.mediaStream.active,\n        audioContextState: this.audioContext?.state || 'none',\n        trackStates: tracks.map(track => ({\n          kind: track.kind,\n          enabled: track.enabled,\n          readyState: track.readyState,\n          muted: track.muted\n        })),\n        healthy: false\n      };\n    }\n\n    const trackStates: TrackState[] = tracks.map(track => ({\n      kind: track.kind,\n      enabled: track.enabled,\n      readyState: track.readyState,\n      muted: track.muted\n    }));\n\n    // AudioTrack detailed state check (Safari WebKit compatibility)\n    if (audioTrack.readyState === 'ended') {\n      return {\n        mediaStreamActive: this.mediaStream.active,\n        audioContextState: this.audioContext?.state || 'none',\n        trackStates,\n        healthy: false\n      };\n    }\n\n    if (!audioTrack.enabled) {\n      return {\n        mediaStreamActive: this.mediaStream.active,\n        audioContextState: this.audioContext?.state || 'none',\n        trackStates,\n        healthy: false\n      };\n    }\n\n    // Safari-specific muted state check\n    if (audioTrack.muted) {\n      return {\n        mediaStreamActive: this.mediaStream.active,\n        audioContextState: this.audioContext?.state || 'none',\n        trackStates,\n        healthy: false\n      };\n    }\n\n    // Additional check: MediaStream and Track consistency verification\n    if (this.mediaStream.active && audioTrack.readyState !== 'live') {\n      return {\n        mediaStreamActive: this.mediaStream.active,\n        audioContextState: this.audioContext?.state || 'none',\n        trackStates,\n        healthy: false\n      };\n    }\n\n    return {\n      mediaStreamActive: this.mediaStream.active,\n      audioContextState: this.audioContext?.state || 'none',\n      trackStates,\n      healthy: true,\n      refCount: this.refCount\n    };\n  }\n}","'use strict';\n\nfunction FFT(size) {\n  this.size = size | 0;\n  if (this.size <= 1 || (this.size & (this.size - 1)) !== 0)\n    throw new Error('FFT size must be a power of two and bigger than 1');\n\n  this._csize = size << 1;\n\n  // NOTE: Use of `var` is intentional for old V8 versions\n  var table = new Array(this.size * 2);\n  for (var i = 0; i < table.length; i += 2) {\n    const angle = Math.PI * i / this.size;\n    table[i] = Math.cos(angle);\n    table[i + 1] = -Math.sin(angle);\n  }\n  this.table = table;\n\n  // Find size's power of two\n  var power = 0;\n  for (var t = 1; this.size > t; t <<= 1)\n    power++;\n\n  // Calculate initial step's width:\n  //   * If we are full radix-4 - it is 2x smaller to give inital len=8\n  //   * Otherwise it is the same as `power` to give len=4\n  this._width = power % 2 === 0 ? power - 1 : power;\n\n  // Pre-compute bit-reversal patterns\n  this._bitrev = new Array(1 << this._width);\n  for (var j = 0; j < this._bitrev.length; j++) {\n    this._bitrev[j] = 0;\n    for (var shift = 0; shift < this._width; shift += 2) {\n      var revShift = this._width - shift - 2;\n      this._bitrev[j] |= ((j >>> shift) & 3) << revShift;\n    }\n  }\n\n  this._out = null;\n  this._data = null;\n  this._inv = 0;\n}\nmodule.exports = FFT;\n\nFFT.prototype.fromComplexArray = function fromComplexArray(complex, storage) {\n  var res = storage || new Array(complex.length >>> 1);\n  for (var i = 0; i < complex.length; i += 2)\n    res[i >>> 1] = complex[i];\n  return res;\n};\n\nFFT.prototype.createComplexArray = function createComplexArray() {\n  const res = new Array(this._csize);\n  for (var i = 0; i < res.length; i++)\n    res[i] = 0;\n  return res;\n};\n\nFFT.prototype.toComplexArray = function toComplexArray(input, storage) {\n  var res = storage || this.createComplexArray();\n  for (var i = 0; i < res.length; i += 2) {\n    res[i] = input[i >>> 1];\n    res[i + 1] = 0;\n  }\n  return res;\n};\n\nFFT.prototype.completeSpectrum = function completeSpectrum(spectrum) {\n  var size = this._csize;\n  var half = size >>> 1;\n  for (var i = 2; i < half; i += 2) {\n    spectrum[size - i] = spectrum[i];\n    spectrum[size - i + 1] = -spectrum[i + 1];\n  }\n};\n\nFFT.prototype.transform = function transform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._transform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT.prototype.realTransform = function realTransform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 0;\n  this._realTransform4();\n  this._out = null;\n  this._data = null;\n};\n\nFFT.prototype.inverseTransform = function inverseTransform(out, data) {\n  if (out === data)\n    throw new Error('Input and output buffers must be different');\n\n  this._out = out;\n  this._data = data;\n  this._inv = 1;\n  this._transform4();\n  for (var i = 0; i < out.length; i++)\n    out[i] /= this.size;\n  this._out = null;\n  this._data = null;\n};\n\n// radix-4 implementation\n//\n// NOTE: Uses of `var` are intentional for older V8 version that do not\n// support both `let compound assignments` and `const phi`\nFFT.prototype._transform4 = function _transform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform2(outOff, off, step);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleTransform4(outOff, off, step);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var quarterLen = len >>> 2;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      // Full case\n      var limit = outOff + quarterLen;\n      for (var i = outOff, k = 0; i < limit; i += 2, k += step) {\n        const A = i;\n        const B = A + quarterLen;\n        const C = B + quarterLen;\n        const D = C + quarterLen;\n\n        // Original values\n        const Ar = out[A];\n        const Ai = out[A + 1];\n        const Br = out[B];\n        const Bi = out[B + 1];\n        const Cr = out[C];\n        const Ci = out[C + 1];\n        const Dr = out[D];\n        const Di = out[D + 1];\n\n        // Middle values\n        const MAr = Ar;\n        const MAi = Ai;\n\n        const tableBr = table[k];\n        const tableBi = inv * table[k + 1];\n        const MBr = Br * tableBr - Bi * tableBi;\n        const MBi = Br * tableBi + Bi * tableBr;\n\n        const tableCr = table[2 * k];\n        const tableCi = inv * table[2 * k + 1];\n        const MCr = Cr * tableCr - Ci * tableCi;\n        const MCi = Cr * tableCi + Ci * tableCr;\n\n        const tableDr = table[3 * k];\n        const tableDi = inv * table[3 * k + 1];\n        const MDr = Dr * tableDr - Di * tableDi;\n        const MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        const T0r = MAr + MCr;\n        const T0i = MAi + MCi;\n        const T1r = MAr - MCr;\n        const T1i = MAi - MCi;\n        const T2r = MBr + MDr;\n        const T2i = MBi + MDi;\n        const T3r = inv * (MBr - MDr);\n        const T3i = inv * (MBi - MDi);\n\n        // Final values\n        const FAr = T0r + T2r;\n        const FAi = T0i + T2i;\n\n        const FCr = T0r - T2r;\n        const FCi = T0i - T2i;\n\n        const FBr = T1r + T3i;\n        const FBi = T1i - T3r;\n\n        const FDr = T1r - T3i;\n        const FDi = T1i + T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n        out[C] = FCr;\n        out[C + 1] = FCi;\n        out[D] = FDr;\n        out[D + 1] = FDi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT.prototype._singleTransform2 = function _singleTransform2(outOff, off,\n                                                             step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const evenI = data[off + 1];\n  const oddR = data[off + step];\n  const oddI = data[off + step + 1];\n\n  const leftR = evenR + oddR;\n  const leftI = evenI + oddI;\n  const rightR = evenR - oddR;\n  const rightI = evenI - oddI;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = leftI;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = rightI;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT.prototype._singleTransform4 = function _singleTransform4(outOff, off,\n                                                             step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Ai = data[off + 1];\n  const Br = data[off + step];\n  const Bi = data[off + step + 1];\n  const Cr = data[off + step2];\n  const Ci = data[off + step2 + 1];\n  const Dr = data[off + step3];\n  const Di = data[off + step3 + 1];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T0i = Ai + Ci;\n  const T1r = Ar - Cr;\n  const T1i = Ai - Ci;\n  const T2r = Br + Dr;\n  const T2i = Bi + Di;\n  const T3r = inv * (Br - Dr);\n  const T3i = inv * (Bi - Di);\n\n  // Final values\n  const FAr = T0r + T2r;\n  const FAi = T0i + T2i;\n\n  const FBr = T1r + T3i;\n  const FBi = T1i - T3r;\n\n  const FCr = T0r - T2r;\n  const FCi = T0i - T2i;\n\n  const FDr = T1r - T3i;\n  const FDi = T1i + T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = FAi;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = FCi;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n\n// Real input radix-4 implementation\nFFT.prototype._realTransform4 = function _realTransform4() {\n  var out = this._out;\n  var size = this._csize;\n\n  // Initial step (permute and transform)\n  var width = this._width;\n  var step = 1 << width;\n  var len = (size / step) << 1;\n\n  var outOff;\n  var t;\n  var bitrev = this._bitrev;\n  if (len === 4) {\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform2(outOff, off >>> 1, step >>> 1);\n    }\n  } else {\n    // len === 8\n    for (outOff = 0, t = 0; outOff < size; outOff += len, t++) {\n      const off = bitrev[t];\n      this._singleRealTransform4(outOff, off >>> 1, step >>> 1);\n    }\n  }\n\n  // Loop through steps in decreasing order\n  var inv = this._inv ? -1 : 1;\n  var table = this.table;\n  for (step >>= 2; step >= 2; step >>= 2) {\n    len = (size / step) << 1;\n    var halfLen = len >>> 1;\n    var quarterLen = halfLen >>> 1;\n    var hquarterLen = quarterLen >>> 1;\n\n    // Loop through offsets in the data\n    for (outOff = 0; outOff < size; outOff += len) {\n      for (var i = 0, k = 0; i <= hquarterLen; i += 2, k += step) {\n        var A = outOff + i;\n        var B = A + quarterLen;\n        var C = B + quarterLen;\n        var D = C + quarterLen;\n\n        // Original values\n        var Ar = out[A];\n        var Ai = out[A + 1];\n        var Br = out[B];\n        var Bi = out[B + 1];\n        var Cr = out[C];\n        var Ci = out[C + 1];\n        var Dr = out[D];\n        var Di = out[D + 1];\n\n        // Middle values\n        var MAr = Ar;\n        var MAi = Ai;\n\n        var tableBr = table[k];\n        var tableBi = inv * table[k + 1];\n        var MBr = Br * tableBr - Bi * tableBi;\n        var MBi = Br * tableBi + Bi * tableBr;\n\n        var tableCr = table[2 * k];\n        var tableCi = inv * table[2 * k + 1];\n        var MCr = Cr * tableCr - Ci * tableCi;\n        var MCi = Cr * tableCi + Ci * tableCr;\n\n        var tableDr = table[3 * k];\n        var tableDi = inv * table[3 * k + 1];\n        var MDr = Dr * tableDr - Di * tableDi;\n        var MDi = Dr * tableDi + Di * tableDr;\n\n        // Pre-Final values\n        var T0r = MAr + MCr;\n        var T0i = MAi + MCi;\n        var T1r = MAr - MCr;\n        var T1i = MAi - MCi;\n        var T2r = MBr + MDr;\n        var T2i = MBi + MDi;\n        var T3r = inv * (MBr - MDr);\n        var T3i = inv * (MBi - MDi);\n\n        // Final values\n        var FAr = T0r + T2r;\n        var FAi = T0i + T2i;\n\n        var FBr = T1r + T3i;\n        var FBi = T1i - T3r;\n\n        out[A] = FAr;\n        out[A + 1] = FAi;\n        out[B] = FBr;\n        out[B + 1] = FBi;\n\n        // Output final middle point\n        if (i === 0) {\n          var FCr = T0r - T2r;\n          var FCi = T0i - T2i;\n          out[C] = FCr;\n          out[C + 1] = FCi;\n          continue;\n        }\n\n        // Do not overwrite ourselves\n        if (i === hquarterLen)\n          continue;\n\n        // In the flipped case:\n        // MAi = -MAi\n        // MBr=-MBi, MBi=-MBr\n        // MCr=-MCr\n        // MDr=MDi, MDi=MDr\n        var ST0r = T1r;\n        var ST0i = -T1i;\n        var ST1r = T0r;\n        var ST1i = -T0i;\n        var ST2r = -inv * T3i;\n        var ST2i = -inv * T3r;\n        var ST3r = -inv * T2i;\n        var ST3i = -inv * T2r;\n\n        var SFAr = ST0r + ST2r;\n        var SFAi = ST0i + ST2i;\n\n        var SFBr = ST1r + ST3i;\n        var SFBi = ST1i - ST3r;\n\n        var SA = outOff + quarterLen - i;\n        var SB = outOff + halfLen - i;\n\n        out[SA] = SFAr;\n        out[SA + 1] = SFAi;\n        out[SB] = SFBr;\n        out[SB + 1] = SFBi;\n      }\n    }\n  }\n};\n\n// radix-2 implementation\n//\n// NOTE: Only called for len=4\nFFT.prototype._singleRealTransform2 = function _singleRealTransform2(outOff,\n                                                                     off,\n                                                                     step) {\n  const out = this._out;\n  const data = this._data;\n\n  const evenR = data[off];\n  const oddR = data[off + step];\n\n  const leftR = evenR + oddR;\n  const rightR = evenR - oddR;\n\n  out[outOff] = leftR;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = rightR;\n  out[outOff + 3] = 0;\n};\n\n// radix-4\n//\n// NOTE: Only called for len=8\nFFT.prototype._singleRealTransform4 = function _singleRealTransform4(outOff,\n                                                                     off,\n                                                                     step) {\n  const out = this._out;\n  const data = this._data;\n  const inv = this._inv ? -1 : 1;\n  const step2 = step * 2;\n  const step3 = step * 3;\n\n  // Original values\n  const Ar = data[off];\n  const Br = data[off + step];\n  const Cr = data[off + step2];\n  const Dr = data[off + step3];\n\n  // Pre-Final values\n  const T0r = Ar + Cr;\n  const T1r = Ar - Cr;\n  const T2r = Br + Dr;\n  const T3r = inv * (Br - Dr);\n\n  // Final values\n  const FAr = T0r + T2r;\n\n  const FBr = T1r;\n  const FBi = -T3r;\n\n  const FCr = T0r - T2r;\n\n  const FDr = T1r;\n  const FDi = T3r;\n\n  out[outOff] = FAr;\n  out[outOff + 1] = 0;\n  out[outOff + 2] = FBr;\n  out[outOff + 3] = FBi;\n  out[outOff + 4] = FCr;\n  out[outOff + 5] = 0;\n  out[outOff + 6] = FDr;\n  out[outOff + 7] = FDi;\n};\n","import FFT from \"fft.js\";\n\n/**\n * @typedef {Float32Array | Float64Array | number[]} Buffer One of the supported\n * buffer types. Other numeric array types may not work correctly.\n */\n\n/**\n * A class that can perform autocorrelation on input arrays of a given size.\n *\n * The class holds internal buffers so that no additional allocations are\n * necessary while performing the operation.\n *\n * @template {Buffer} T the buffer type to use. While inputs to the\n * autocorrelation process can be any array-like type, the output buffer\n * (whether provided explicitly or using a fresh buffer) is always of this type.\n */\nexport class Autocorrelator {\n  /** @private @readonly @type {number} */\n  _inputLength;\n  /** @private @type {FFT} */\n  _fft;\n  /** @private @type {(size: number) => T} */\n  _bufferSupplier;\n  /** @private @type {T} */\n  _paddedInputBuffer;\n  /** @private @type {T} */\n  _transformBuffer;\n  /** @private @type {T} */\n  _inverseBuffer;\n\n  /**\n   * A helper method to create an {@link Autocorrelator} using\n   * {@link Float32Array} buffers.\n   *\n   * @param inputLength {number} the input array length to support\n   * @returns {Autocorrelator<Float32Array>}\n   */\n  static forFloat32Array(inputLength) {\n    return new Autocorrelator(\n      inputLength,\n      (length) => new Float32Array(length),\n    );\n  }\n\n  /**\n   * A helper method to create an {@link Autocorrelator} using\n   * {@link Float64Array} buffers.\n   *\n   * @param inputLength {number} the input array length to support\n   * @returns {Autocorrelator<Float64Array>}\n   */\n  static forFloat64Array(inputLength) {\n    return new Autocorrelator(\n      inputLength,\n      (length) => new Float64Array(length),\n    );\n  }\n\n  /**\n   * A helper method to create an {@link Autocorrelator} using `number[]`\n   * buffers.\n   *\n   * @param inputLength {number} the input array length to support\n   * @returns {Autocorrelator<number[]>}\n   */\n  static forNumberArray(inputLength) {\n    return new Autocorrelator(inputLength, (length) => Array(length));\n  }\n\n  /**\n   * Constructs a new {@link Autocorrelator} able to handle input arrays of the\n   * given length.\n   *\n   * @param inputLength {number} the input array length to support. This\n   * `Autocorrelator` will only support operation on arrays of this length.\n   * @param bufferSupplier {(length: number) => T} the function to use for\n   * creating buffers, accepting the length of the buffer to create and\n   * returning a new buffer of that length. The values of the returned buffer\n   * need not be initialized in any particular way.\n   */\n  constructor(inputLength, bufferSupplier) {\n    if (inputLength < 1) {\n      throw new Error(`Input length must be at least one`);\n    }\n    this._inputLength = inputLength;\n    // We need to double the input length to get correct results, and the FFT\n    // algorithm we use requires a length that's a power of 2\n    this._fft = new FFT(ceilPow2(2 * inputLength));\n    this._bufferSupplier = bufferSupplier;\n    this._paddedInputBuffer = this._bufferSupplier(this._fft.size);\n    this._transformBuffer = this._bufferSupplier(2 * this._fft.size);\n    this._inverseBuffer = this._bufferSupplier(2 * this._fft.size);\n  }\n\n  /**\n   * Returns the supported input length.\n   *\n   * @returns {number} the supported input length\n   */\n  get inputLength() {\n    return this._inputLength;\n  }\n\n  /**\n   * Autocorrelates the given input data.\n   *\n   * @param input {ArrayLike<number>} the input data to autocorrelate\n   * @param output {T} the output buffer into which to write the autocorrelated\n   * data. If not provided, a new buffer will be created.\n   * @returns {T} `output`\n   */\n  autocorrelate(input, output = this._bufferSupplier(input.length)) {\n    if (input.length !== this._inputLength) {\n      throw new Error(\n        `Input must have length ${this._inputLength} but had length ${input.length}`,\n      );\n    }\n    // Step 0: pad the input array with zeros\n    for (let i = 0; i < input.length; i++) {\n      this._paddedInputBuffer[i] = input[i];\n    }\n    for (let i = input.length; i < this._paddedInputBuffer.length; i++) {\n      this._paddedInputBuffer[i] = 0;\n    }\n\n    // Step 1: get the DFT of the input array\n    this._fft.realTransform(this._transformBuffer, this._paddedInputBuffer);\n    // We need to fill in the right half of the array too\n    this._fft.completeSpectrum(this._transformBuffer);\n    // Step 2: multiply each entry by its conjugate\n    const tb = this._transformBuffer;\n    for (let i = 0; i < tb.length; i += 2) {\n      tb[i] = tb[i] * tb[i] + tb[i + 1] * tb[i + 1];\n      tb[i + 1] = 0;\n    }\n    // Step 3: perform the inverse transform\n    this._fft.inverseTransform(this._inverseBuffer, this._transformBuffer);\n\n    // This last result (the inverse transform) contains the autocorrelation\n    // data, which is completely real\n    for (let i = 0; i < input.length; i++) {\n      output[i] = this._inverseBuffer[2 * i];\n    }\n    return output;\n  }\n}\n\n/**\n * Returns an array of all the key maximum positions in the given input array.\n *\n * In McLeod's paper, a key maximum is the highest maximum between a positively\n * sloped zero crossing and a negatively sloped one.\n *\n * TODO: it may be more efficient not to construct a new output array each time,\n * but that would also make the code more complicated (more so than the changes\n * that were needed to remove the other allocations).\n *\n * @param input {ArrayLike<number>}\n * @returns {number[]}\n */\nfunction getKeyMaximumIndices(input) {\n  // The indices of the key maxima\n  /** @type {number[]} */ const keyIndices = [];\n  // Whether the last zero crossing found was positively sloped; equivalently,\n  // whether we're looking for a key maximum\n  let lookingForMaximum = false;\n  // The largest local maximum found so far\n  let max = -Infinity;\n  // The index of the largest local maximum so far\n  let maxIndex = -1;\n\n  for (let i = 1; i < input.length - 1; i++) {\n    if (input[i - 1] <= 0 && input[i] > 0) {\n      // Positively sloped zero crossing\n      lookingForMaximum = true;\n      maxIndex = i;\n      max = input[i];\n    } else if (input[i - 1] > 0 && input[i] <= 0) {\n      // Negatively sloped zero crossing\n      lookingForMaximum = false;\n      if (maxIndex !== -1) {\n        keyIndices.push(maxIndex);\n      }\n    } else if (lookingForMaximum && input[i] > max) {\n      max = input[i];\n      maxIndex = i;\n    }\n  }\n\n  return keyIndices;\n}\n\n/**\n * Refines the chosen key maximum index chosen from the given data by\n * interpolating a parabola using the key maximum index and its two neighbors\n * and finding the position of that parabola's maximum value.\n *\n * This is described in section 5 of the MPM paper as a way to refine the\n * position of the maximum.\n *\n * @param index {number} the chosen key maximum index. This must be between `1`\n * and `data.length - 2`, inclusive, since it and its two neighbors need to be\n * valid indexes of `data`.\n * @param data {ArrayLike<number>} the input array from which `index` was chosen\n * @returns {[number, number]} a pair consisting of the refined key maximum index and the\n * interpolated value of `data` at that index (the latter of which is used as a\n * measure of clarity)\n */\nfunction refineResultIndex(index, data) {\n  const [x0, x1, x2] = [index - 1, index, index + 1];\n  const [y0, y1, y2] = [data[x0], data[x1], data[x2]];\n\n  // The parabola going through the three data points can be written as\n  // y = y0(x - x1)(x - x2)/(x0 - x1)(x0 - x2)\n  //   + y1(x - x0)(x - x2)/(x1 - x0)(x1 - x2)\n  //   + y2(x - x0)(x - x1)/(x2 - x0)(x2 - x1)\n  // Given the definitions of x0, x1, and x2, we can simplify the denominators:\n  // y = y0(x - x1)(x - x2)/2\n  //   - y1(x - x0)(x - x2)\n  //   + y2(x - x0)(x - x1)/2\n  // We can expand this out and get the coefficients in standard form:\n  // a = y0/2 - y1 + y2/2\n  // b = -(y0/2)(x1 + x2) + y1(x0 + x2) - (y2/2)(x0 + x1)\n  // c = y0x1x2/2 - y1x0x2 + y2x0x1/2\n  // The index of the maximum is -b / 2a (by solving for x where the derivative\n  // is 0).\n\n  const a = y0 / 2 - y1 + y2 / 2;\n  const b = -(y0 / 2) * (x1 + x2) + y1 * (x0 + x2) - (y2 / 2) * (x0 + x1);\n  const c = (y0 * x1 * x2) / 2 - y1 * x0 * x2 + (y2 * x0 * x1) / 2;\n\n  const xMax = -b / (2 * a);\n  const yMax = a * xMax * xMax + b * xMax + c;\n  return [xMax, yMax];\n}\n\n/**\n * A class that can detect the pitch of a note from a time-domain input array.\n *\n * This class uses the McLeod pitch method (MPM) to detect pitches. MPM is\n * described in the paper 'A Smarter Way to Find Pitch' by Philip McLeod and\n * Geoff Wyvill\n * (http://miracle.otago.ac.nz/tartini/papers/A_Smarter_Way_to_Find_Pitch.pdf).\n *\n * The class holds internal buffers so that a minimal number of additional\n * allocations are necessary while performing the operation.\n *\n * @template {Buffer} T the buffer type to use internally. Inputs to the\n * pitch-detection process can be any numeric array type.\n */\nexport class PitchDetector {\n  /** @private @type {Autocorrelator<T>} */\n  _autocorrelator;\n  /** @private @type {T} */\n  _nsdfBuffer;\n  /** @private @type {number} */\n  _clarityThreshold = 0.9;\n  /** @private @type {number} */\n  _minVolumeAbsolute = 0.0;\n  /** @private @type {number} */\n  _maxInputAmplitude = 1.0;\n\n  /**\n   * A helper method to create an {@link PitchDetector} using {@link Float32Array} buffers.\n   *\n   * @param inputLength {number} the input array length to support\n   * @returns {PitchDetector<Float32Array>}\n   */\n  static forFloat32Array(inputLength) {\n    return new PitchDetector(inputLength, (length) => new Float32Array(length));\n  }\n\n  /**\n   * A helper method to create an {@link PitchDetector} using {@link Float64Array} buffers.\n   *\n   * @param inputLength {number} the input array length to support\n   * @returns {PitchDetector<Float64Array>}\n   */\n  static forFloat64Array(inputLength) {\n    return new PitchDetector(inputLength, (length) => new Float64Array(length));\n  }\n\n  /**\n   * A helper method to create an {@link PitchDetector} using `number[]` buffers.\n   *\n   * @param inputLength {number} the input array length to support\n   * @returns {PitchDetector<number[]>}\n   */\n  static forNumberArray(inputLength) {\n    return new PitchDetector(inputLength, (length) => Array(length));\n  }\n\n  /**\n   * Constructs a new {@link PitchDetector} able to handle input arrays of the\n   * given length.\n   *\n   * @param inputLength {number} the input array length to support. This\n   * `PitchDetector` will only support operation on arrays of this length.\n   * @param bufferSupplier {(inputLength: number) => T} the function to use for\n   * creating buffers, accepting the length of the buffer to create and\n   * returning a new buffer of that length. The values of the returned buffer\n   * need not be initialized in any particular way.\n   */\n  constructor(inputLength, bufferSupplier) {\n    this._autocorrelator = new Autocorrelator(inputLength, bufferSupplier);\n    this._nsdfBuffer = bufferSupplier(inputLength);\n  }\n\n  /**\n   * Returns the supported input length.\n   *\n   * @returns {number} the supported input length\n   */\n  get inputLength() {\n    return this._autocorrelator.inputLength;\n  }\n\n  /**\n   * Sets the clarity threshold used when identifying the correct pitch (the constant\n   * `k` from the MPM paper). The value must be between 0 (exclusive) and 1\n   * (inclusive), with the most suitable range being between 0.8 and 1.\n   *\n   * @param threshold {number} the clarity threshold\n   */\n  set clarityThreshold(threshold) {\n    if (!Number.isFinite(threshold) || threshold <= 0 || threshold > 1) {\n      throw new Error(\"clarityThreshold must be a number in the range (0, 1]\");\n    }\n    this._clarityThreshold = threshold;\n  }\n\n  /**\n   * Sets the minimum detectable volume, as an absolute number between 0 and\n   * `maxInputAmplitude`, inclusive, to consider in a sample when detecting the\n   * pitch. If a sample fails to meet this minimum volume, `findPitch` will\n   * return a clarity of 0.\n   *\n   * Volume is calculated as the RMS (root mean square) of the input samples.\n   *\n   * @param volume {number} the minimum volume as an absolute amplitude value\n   */\n  set minVolumeAbsolute(volume) {\n    if (\n      !Number.isFinite(volume) ||\n      volume < 0 ||\n      volume > this._maxInputAmplitude\n    ) {\n      throw new Error(\n        `minVolumeAbsolute must be a number in the range [0, ${this._maxInputAmplitude}]`,\n      );\n    }\n    this._minVolumeAbsolute = volume;\n  }\n\n  /**\n   * Sets the minimum volume using a decibel measurement. Must be less than or\n   * equal to 0: 0 indicates the loudest possible sound (see\n   * `maxInputAmplitude`), -10 is a sound with a tenth of the volume of the\n   * loudest possible sound, etc.\n   *\n   * Volume is calculated as the RMS (root mean square) of the input samples.\n   *\n   * @param db {number} the minimum volume in decibels, with 0 being the loudest\n   * sound\n   */\n  set minVolumeDecibels(db) {\n    if (!Number.isFinite(db) || db > 0) {\n      throw new Error(\"minVolumeDecibels must be a number <= 0\");\n    }\n    this._minVolumeAbsolute = this._maxInputAmplitude * 10 ** (db / 10);\n  }\n\n  /**\n   * Sets the maximum amplitude of an input reading. Must be greater than 0.\n   *\n   * @param amplitude {number} the maximum amplitude (absolute value) of an input reading\n   */\n  set maxInputAmplitude(amplitude) {\n    if (!Number.isFinite(amplitude) || amplitude <= 0) {\n      throw new Error(\"maxInputAmplitude must be a number > 0\");\n    }\n    this._maxInputAmplitude = amplitude;\n  }\n\n  /**\n   * Returns the pitch detected using McLeod Pitch Method (MPM) along with a\n   * measure of its clarity.\n   *\n   * The clarity is a value between 0 and 1 (potentially inclusive) that\n   * represents how \"clear\" the pitch was. A clarity value of 1 indicates that\n   * the pitch was very distinct, while lower clarity values indicate less\n   * definite pitches.\n   *\n   * @param input {ArrayLike<number>} the time-domain input data\n   * @param sampleRate {number} the sample rate at which the input data was\n   * collected\n   * @returns {[number, number]} the detected pitch, in Hz, followed by the\n   * clarity. If a pitch cannot be determined from the input, such as if the\n   * volume is too low (see `minVolumeAbsolute` and `minVolumeDecibels`), this\n   * will be `[0, 0]`.\n   */\n  findPitch(input, sampleRate) {\n    // If the highest key maximum is less than the minimum volume, we don't need\n    // to bother detecting the pitch, as the sample is too quiet.\n    if (this._belowMinimumVolume(input)) return [0, 0];\n    this._nsdf(input);\n    const keyMaximumIndices = getKeyMaximumIndices(this._nsdfBuffer);\n    if (keyMaximumIndices.length === 0) {\n      // No key maxima means that we either don't have enough data to analyze or\n      // that the data was flawed (such as an input array of zeroes)\n      return [0, 0];\n    }\n    // The highest key maximum\n    const nMax = Math.max(...keyMaximumIndices.map((i) => this._nsdfBuffer[i]));\n    // Following the paper, we return the pitch corresponding to the first key\n    // maximum higher than K * nMax. This is guaranteed not to be undefined, since\n    // we know of at least one key maximum satisfying this condition (whichever\n    // key maximum gave us nMax).\n    const resultIndex = keyMaximumIndices.find(\n      (i) => this._nsdfBuffer[i] >= this._clarityThreshold * nMax,\n    );\n    const [refinedResultIndex, clarity] = refineResultIndex(\n      // @ts-expect-error resultIndex is guaranteed to be defined\n      resultIndex,\n      this._nsdfBuffer,\n    );\n\n    // Due to floating point errors, the clarity may occasionally come out to be\n    // slightly over 1.0. We can avoid incorrect results by clamping the value.\n    return [sampleRate / refinedResultIndex, Math.min(clarity, 1.0)];\n  }\n\n  /**\n   * Returns whether the input audio data is below the minimum volume allowed by\n   * the pitch detector.\n   *\n   * @private\n   * @param input {ArrayLike<number>}\n   * @returns {boolean}\n   */\n  _belowMinimumVolume(input) {\n    if (this._minVolumeAbsolute === 0) return false;\n    let squareSum = 0;\n    for (let i = 0; i < input.length; i++) {\n      squareSum += input[i] ** 2;\n    }\n    return Math.sqrt(squareSum / input.length) < this._minVolumeAbsolute;\n  }\n\n  /**\n   * Computes the NSDF of the input and stores it in the internal buffer. This\n   * is equation (9) in the McLeod pitch method paper.\n   *\n   * @private\n   * @param input {ArrayLike<number>}\n   */\n  _nsdf(input) {\n    // The function r'(tau) is the autocorrelation\n    this._autocorrelator.autocorrelate(input, this._nsdfBuffer);\n    // The function m'(tau) (defined in equation (6)) can be computed starting\n    // with m'(0), which is equal to 2r'(0), and then iteratively modified to\n    // get m'(1), m'(2), etc. For example, to get m'(1), we take m'(0) and\n    // subtract x_0^2 and x_{W-1}^2. Then, to get m'(2), we take m'(1) and\n    // subtract x_1^2 and x_{W-2}^2, and further values are similar (see the\n    // note at the end of section 6 in the MPM paper).\n    //\n    // The resulting array values are 2 * r'(tau) / m'(tau). We use m below as\n    // the incremental value of m'.\n    let m = 2 * this._nsdfBuffer[0];\n    /** @type {number} */ let i;\n    // As pointed out by issuefiler on GitHub, we can take advantage of the fact\n    // that m will never increase to avoid division by zero by ending this loop\n    // once m === 0. The rest of the array values after m becomes 0 will just be\n    // set to 0 themselves. We actually check for m > 0 rather than m === 0\n    // because there may be small floating-point errors that cause m to become\n    // negative rather than exactly 0.\n    for (i = 0; i < this._nsdfBuffer.length && m > 0; i++) {\n      this._nsdfBuffer[i] = (2 * this._nsdfBuffer[i]) / m;\n      m -= input[i] ** 2 + input[input.length - i - 1] ** 2;\n    }\n    // If there are any array values remaining, it means m === 0 for those\n    // values of tau, so we can just set them to 0\n    for (; i < this._nsdfBuffer.length; i++) {\n      this._nsdfBuffer[i] = 0;\n    }\n  }\n}\n\n/**\n * Rounds up the input to the next power of 2.\n *\n * @param {number} v\n * @returns {number} the next power of 2 at least as large as `v`\n */\nfunction ceilPow2(v) {\n  // https://graphics.stanford.edu/~seander/bithacks.html#RoundUpPowerOf2\n  v--;\n  v |= v >> 1;\n  v |= v >> 2;\n  v |= v >> 4;\n  v |= v >> 8;\n  v |= v >> 16;\n  v++;\n  return v;\n}\n","/**\n * PitchDetector - Framework-agnostic High-precision Pitch Detection\n * \n * Based on Pitchy library with McLeod Pitch Method\n * Includes harmonic correction, noise filtering, and device-specific optimization\n */\n\nimport { PitchDetector as PitchyDetector } from 'pitchy';\nimport type { \n  PitchDetectorConfig, \n  PitchDetectionResult, \n  PitchCallback,\n  ErrorCallback,\n  StateChangeCallback,\n  DeviceSpecs\n} from '../types';\nimport { AudioManager } from './AudioManager';\n\nexport class PitchDetector {\n  // Core components\n  private audioManager: AudioManager;\n  private pitchDetector: PitchyDetector<Float32Array> | null = null;\n  private analyser: AnalyserNode | null = null;\n  private rawAnalyser: AnalyserNode | null = null;\n  private animationFrame: number | null = null;\n  \n  // State management\n  private componentState: 'uninitialized' | 'initializing' | 'ready' | 'detecting' | 'error' = 'uninitialized';\n  private isInitialized = false;\n  private isDetecting = false;\n  private lastError: Error | null = null;\n  \n  // Analyser management\n  private analyserIds: string[] = [];\n  \n  // Detection data\n  private currentVolume = 0;\n  private rawVolume = 0;\n  private currentFrequency = 0;\n  private detectedNote = '--';\n  private pitchClarity = 0;\n  \n  // Stabilization buffers\n  private volumeHistory: number[] = [];\n  private stableVolume = 0;\n  \n  // Harmonic correction\n  private previousFrequency = 0;\n  private harmonicHistory: Array<{frequency: number, confidence: number, timestamp: number}> = [];\n  \n  // Configuration\n  private config: Required<PitchDetectorConfig>;\n  private disableHarmonicCorrection = false;\n  \n  // Callbacks\n  private callbacks: {\n    onPitchUpdate?: PitchCallback;\n    onError?: ErrorCallback;\n    onStateChange?: StateChangeCallback;\n  } = {};\n  \n  // Device specifications\n  private deviceSpecs: DeviceSpecs;\n\n  constructor(audioManager: AudioManager, config: PitchDetectorConfig = {}) {\n    this.audioManager = audioManager;\n    this.config = {\n      fftSize: 4096,\n      smoothing: 0.1,\n      clarityThreshold: 0.8,\n      minVolumeAbsolute: 0.01,\n      ...config\n    };\n    \n    this.deviceSpecs = this.audioManager.getPlatformSpecs();\n  }\n\n  /**\n   * Set callback functions\n   */\n  setCallbacks(callbacks: {\n    onPitchUpdate?: PitchCallback;\n    onError?: ErrorCallback;\n    onStateChange?: StateChangeCallback;\n  }): void {\n    this.callbacks = { ...this.callbacks, ...callbacks };\n  }\n\n  /**\n   * Initialize pitch detector with external AudioContext\n   */\n  async initialize(): Promise<void> {\n    try {\n      this.componentState = 'initializing';\n      this.lastError = null;\n      \n      console.log('üéôÔ∏è [PitchDetector] Starting initialization via AudioManager');\n      \n      // Get shared resources from AudioManager\n      await this.audioManager.initialize();\n      \n      console.log('‚úÖ [PitchDetector] AudioManager resources acquired');\n      \n      // Create dedicated Analyser (with filters)\n      const filteredAnalyserId = `pitch-detector-filtered-${Date.now()}`;\n      this.analyser = this.audioManager.createAnalyser(filteredAnalyserId, {\n        fftSize: this.config.fftSize,\n        smoothingTimeConstant: this.config.smoothing,\n        minDecibels: -90,\n        maxDecibels: -10,\n        useFilters: true\n      });\n      this.analyserIds.push(filteredAnalyserId);\n      \n      // Create raw signal Analyser (for comparison)\n      const rawAnalyserId = `pitch-detector-raw-${Date.now()}`;\n      this.rawAnalyser = this.audioManager.createAnalyser(rawAnalyserId, {\n        fftSize: this.config.fftSize,\n        smoothingTimeConstant: this.config.smoothing,\n        minDecibels: -90,\n        maxDecibels: -10,\n        useFilters: false\n      });\n      this.analyserIds.push(rawAnalyserId);\n      \n      console.log('‚úÖ [PitchDetector] Analysers created:', this.analyserIds);\n      \n      // Initialize PitchDetector\n      this.pitchDetector = PitchyDetector.forFloat32Array(this.analyser.fftSize);\n      \n      // Initialization complete\n      this.componentState = 'ready';\n      this.isInitialized = true;\n      \n      // Notify state change\n      this.callbacks.onStateChange?.(this.componentState);\n      \n      console.log('‚úÖ [PitchDetector] Initialization complete');\n      \n    } catch (error) {\n      console.error('‚ùå [PitchDetector] Initialization error:', error);\n      this.componentState = 'error';\n      this.lastError = error as Error;\n      this.isInitialized = false;\n      \n      // Notify error\n      this.callbacks.onError?.(error as Error);\n      \n      throw error;\n    }\n  }\n\n  /**\n   * Start pitch detection\n   */\n  startDetection(): boolean {\n    if (this.componentState !== 'ready') {\n      const error = new Error(`Cannot start detection: component state is ${this.componentState}`);\n      this.callbacks.onError?.(error);\n      return false;\n    }\n    \n    if (!this.analyser || !this.pitchDetector) {\n      const error = new Error('Required components not available');\n      this.componentState = 'error';\n      this.callbacks.onError?.(error);\n      return false;\n    }\n    \n    this.componentState = 'detecting';\n    this.isDetecting = true;\n    this.callbacks.onStateChange?.(this.componentState);\n    this.detectPitch();\n    return true;\n  }\n\n  /**\n   * Stop pitch detection\n   */\n  stopDetection(): void {\n    this.isDetecting = false;\n    if (this.animationFrame) {\n      cancelAnimationFrame(this.animationFrame);\n      this.animationFrame = null;\n    }\n    \n    // Return state to ready (if initialized)\n    if (this.componentState === 'detecting' && this.isInitialized) {\n      this.componentState = 'ready';\n      this.callbacks.onStateChange?.(this.componentState);\n    }\n  }\n\n  /**\n   * Real-time pitch detection loop\n   */\n  private detectPitch(): void {\n    if (!this.isDetecting || !this.analyser || !this.rawAnalyser || !this.pitchDetector) return;\n    \n    const bufferLength = this.analyser.fftSize;\n    const buffer = new Float32Array(bufferLength);\n    const rawBuffer = new Float32Array(this.rawAnalyser.fftSize);\n    \n    this.analyser.getFloatTimeDomainData(buffer);\n    this.rawAnalyser.getFloatTimeDomainData(rawBuffer);\n    \n    // Volume calculation (filtered)\n    let sum = 0;\n    for (let i = 0; i < bufferLength; i++) {\n      sum += Math.abs(buffer[i]);\n    }\n    const rms = Math.sqrt(sum / bufferLength);\n    \n    // Platform-specific volume calculation\n    const platformSpecs = this.deviceSpecs;\n    const adjustedRms = rms * platformSpecs.gainCompensation;\n    const volumePercent = Math.max(0, Math.min(100, \n      (adjustedRms * 100) / platformSpecs.divisor * 6 - platformSpecs.noiseThreshold\n    ));\n    \n    // Raw volume calculation (pre-filter)\n    let rawSum = 0;\n    for (let i = 0; i < rawBuffer.length; i++) {\n      rawSum += Math.abs(rawBuffer[i]);\n    }\n    const rawRms = Math.sqrt(rawSum / rawBuffer.length);\n    const rawVolumePercent = Math.max(0, Math.min(100, \n      (rawRms * platformSpecs.gainCompensation * 100) / platformSpecs.divisor * 6 - platformSpecs.noiseThreshold\n    ));\n    \n    // Volume stabilization (5-frame moving average)\n    this.volumeHistory.push(volumePercent);\n    if (this.volumeHistory.length > 5) {\n      this.volumeHistory.shift();\n    }\n    this.stableVolume = this.volumeHistory.reduce((sum, v) => sum + v, 0) / this.volumeHistory.length;\n    this.currentVolume = this.stableVolume;\n    this.rawVolume = rawVolumePercent;\n    \n    // Pitch detection (using PitchDetector)\n    const audioContext = this.audioManager.getStatus().audioContextState;\n    const sampleRate = audioContext === 'running' ? 44100 : 44100; // Default fallback\n    const [pitch, clarity] = this.pitchDetector.findPitch(buffer, sampleRate);\n    \n    // Human vocal range filtering (practical adjustment)\n    // Optimized for actual human voice range:\n    // - Low range: 65Hz and above (C2 and above, considering male lowest vocal range)  \n    // - High range: 1200Hz and below (practical singing range)\n    // - Exclude extreme low frequency noise (G-1, etc.) reliably\n    const isValidVocalRange = pitch >= 65 && pitch <= 1200;\n    \n    if (pitch && clarity > this.config.clarityThreshold && this.currentVolume > 30 && isValidVocalRange) {\n      let finalFreq = pitch;\n      \n      // Harmonic correction control (for 230Hz stuck issue debugging)\n      if (!this.disableHarmonicCorrection) {\n        // Apply unified harmonic correction system (pass volume information)\n        const normalizedVolume = Math.min(this.currentVolume / 100, 1.0); // Normalize to 0-1\n        finalFreq = this.correctHarmonic(pitch, normalizedVolume);\n      }\n      \n      // Update frequency display\n      this.currentFrequency = Math.round(finalFreq);\n      this.detectedNote = this.frequencyToNote(this.currentFrequency);\n      this.pitchClarity = clarity;\n      \n    } else {\n      // Clear harmonic correction history when signal is weak\n      if (this.currentFrequency === 0) {\n        this.resetHarmonicHistory();\n      }\n      \n      // Clear frequency display\n      this.currentFrequency = 0;\n      this.detectedNote = '--';\n      this.pitchClarity = 0;\n    }\n    \n    // Set VolumeBar to 0 when no pitch is detected (counter extreme low frequency noise)\n    const displayVolume = this.currentFrequency > 0 ? this.rawVolume : 0;\n    \n    // Send data to callback\n    const result: PitchDetectionResult = {\n      frequency: this.currentFrequency,\n      note: this.detectedNote,\n      clarity: this.pitchClarity,\n      volume: displayVolume,\n      cents: this.currentFrequency > 0 ? this.frequencyToCents(this.currentFrequency) : undefined\n    };\n    \n    this.callbacks.onPitchUpdate?.(result);\n    \n    this.animationFrame = requestAnimationFrame(() => this.detectPitch());\n  }\n\n  /**\n   * Harmonic correction system\n   */\n  private correctHarmonic(frequency: number, volume: number): number {\n    const now = Date.now();\n    const confidenceThreshold = 0.7;\n    const historyWindow = 1000; // 1 second\n    \n    // Clean old history\n    this.harmonicHistory = this.harmonicHistory.filter(h => now - h.timestamp < historyWindow);\n    \n    // Calculate confidence based on volume and stability\n    const volumeConfidence = Math.min(volume * 1.5, 1.0);\n    const stabilityConfidence = this.previousFrequency > 0 ? \n      Math.max(0, 1 - Math.abs(frequency - this.previousFrequency) / this.previousFrequency) : 0.5;\n    const confidence = (volumeConfidence + stabilityConfidence) / 2;\n    \n    // Add to history\n    this.harmonicHistory.push({ frequency, confidence, timestamp: now });\n    \n    // Check for harmonic patterns\n    if (this.harmonicHistory.length >= 3) {\n      const recentHistory = this.harmonicHistory.slice(-5);\n      const avgFrequency = recentHistory.reduce((sum, h) => sum + h.frequency, 0) / recentHistory.length;\n      const avgConfidence = recentHistory.reduce((sum, h) => sum + h.confidence, 0) / recentHistory.length;\n      \n      // Check for 2x harmonic (octave up error)\n      const halfFrequency = frequency / 2;\n      if (Math.abs(halfFrequency - avgFrequency) / avgFrequency < 0.1 && avgConfidence > confidenceThreshold) {\n        console.log(`üîß [PitchDetector] Octave correction: ${frequency}Hz ‚Üí ${halfFrequency}Hz`);\n        this.previousFrequency = halfFrequency;\n        return halfFrequency;\n      }\n      \n      // Check for 1/2x harmonic (octave down error)\n      const doubleFrequency = frequency * 2;\n      if (Math.abs(doubleFrequency - avgFrequency) / avgFrequency < 0.1 && avgConfidence > confidenceThreshold) {\n        console.log(`üîß [PitchDetector] Octave up correction: ${frequency}Hz ‚Üí ${doubleFrequency}Hz`);\n        this.previousFrequency = doubleFrequency;\n        return doubleFrequency;\n      }\n    }\n    \n    this.previousFrequency = frequency;\n    return frequency;\n  }\n\n  /**\n   * Reset harmonic correction history\n   */\n  private resetHarmonicHistory(): void {\n    this.harmonicHistory = [];\n    this.previousFrequency = 0;\n  }\n\n  /**\n   * Convert frequency to note name\n   */\n  private frequencyToNote(frequency: number): string {\n    const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n    const A4 = 440;\n    \n    if (frequency <= 0) return '--';\n    \n    const semitonesFromA4 = Math.round(12 * Math.log2(frequency / A4));\n    const noteIndex = (semitonesFromA4 + 9 + 120) % 12;\n    const octave = Math.floor((semitonesFromA4 + 9) / 12) + 4;\n    \n    return noteNames[noteIndex] + octave;\n  }\n\n  /**\n   * Convert frequency to cents deviation from nearest note\n   */\n  private frequencyToCents(frequency: number): number {\n    const A4 = 440;\n    const semitonesFromA4 = 12 * Math.log2(frequency / A4);\n    const nearestSemitone = Math.round(semitonesFromA4);\n    const centsDeviation = (semitonesFromA4 - nearestSemitone) * 100;\n    return Math.round(centsDeviation);\n  }\n\n  /**\n   * Reset display state\n   */\n  resetDisplayState(): void {\n    this.currentVolume = 0;\n    this.rawVolume = 0;\n    this.currentFrequency = 0;\n    this.detectedNote = '--';\n    this.pitchClarity = 0;\n    this.stableVolume = 0;\n    \n    // Clear buffers\n    this.volumeHistory = [];\n    \n    // Reset harmonic correction\n    this.resetHarmonicHistory();\n    \n    console.log('üîÑ [PitchDetector] Display state reset');\n  }\n\n  /**\n   * Enable/disable harmonic correction\n   */\n  setHarmonicCorrectionEnabled(enabled: boolean): void {\n    this.disableHarmonicCorrection = !enabled;\n    if (!enabled) {\n      this.resetHarmonicHistory();\n    }\n  }\n\n  /**\n   * Get initialization status\n   */\n  getIsInitialized(): boolean {\n    return this.isInitialized && this.componentState === 'ready';\n  }\n\n  /**\n   * Get current state\n   */\n  getState() {\n    return {\n      componentState: this.componentState,\n      isInitialized: this.isInitialized,\n      isDetecting: this.isDetecting,\n      lastError: this.lastError,\n      hasRequiredComponents: !!(this.analyser && this.pitchDetector)\n    };\n  }\n\n  /**\n   * Get current detection result\n   */\n  getCurrentResult(): PitchDetectionResult {\n    return {\n      frequency: this.currentFrequency,\n      note: this.detectedNote,\n      clarity: this.pitchClarity,\n      volume: this.currentFrequency > 0 ? this.rawVolume : 0\n    };\n  }\n\n  /**\n   * Reinitialize detector\n   */\n  async reinitialize(): Promise<void> {\n    console.log('üîÑ [PitchDetector] Starting reinitialization');\n    \n    // Cleanup current state\n    this.cleanup();\n    \n    // Short wait to ensure resource release\n    await new Promise(resolve => setTimeout(resolve, 100));\n    \n    // Execute reinitialization\n    await this.initialize();\n    \n    console.log('‚úÖ [PitchDetector] Reinitialization complete');\n  }\n\n  /**\n   * Cleanup resources\n   */\n  cleanup(): void {\n    console.log('üßπ [PitchDetector] Starting cleanup');\n    \n    this.stopDetection();\n    \n    // Notify AudioManager to release created Analysers\n    if (this.analyserIds.length > 0) {\n      this.audioManager.release(this.analyserIds);\n      console.log('üì§ [PitchDetector] Notified AudioManager of Analyser release:', this.analyserIds);\n      this.analyserIds = [];\n    }\n    \n    // Reset state\n    this.componentState = 'uninitialized';\n    this.isInitialized = false;\n    this.lastError = null;\n    \n    // Clear references (actual resources managed by AudioManager)\n    this.analyser = null;\n    this.rawAnalyser = null;\n    this.pitchDetector = null;\n    \n    // Clear history\n    this.volumeHistory = [];\n    this.resetHarmonicHistory();\n    \n    console.log('‚úÖ [PitchDetector] Cleanup complete');\n  }\n}","/**\n * NoiseFilter - 3-stage Noise Reduction Filter Chain\n * \n * Implements sophisticated noise filtering for voice detection:\n * 1. Highpass filter - Remove low frequency noise (below 80Hz)\n * 2. Lowpass filter - Remove high frequency noise (above 800Hz) \n * 3. Notch filter - Remove power line noise (60Hz)\n */\n\nimport type { NoiseFilterConfig } from '../types';\n\nexport class NoiseFilter {\n  private audioContext: AudioContext;\n  private config: Required<NoiseFilterConfig>;\n  \n  // Filter nodes\n  private highpassFilter: BiquadFilterNode | null = null;\n  private lowpassFilter: BiquadFilterNode | null = null;\n  private notchFilter: BiquadFilterNode | null = null;\n  \n  // Chain state\n  private isConnected = false;\n  private inputNode: AudioNode | null = null;\n  private outputNode: AudioNode | null = null;\n\n  constructor(audioContext: AudioContext, config: NoiseFilterConfig = {}) {\n    this.audioContext = audioContext;\n    this.config = {\n      highpassFreq: 80,\n      lowpassFreq: 800,\n      notchFreq: 60,\n      highpassQ: 0.7,\n      lowpassQ: 0.7,\n      notchQ: 10.0,\n      useFilters: true,\n      ...config\n    };\n    \n    this.createFilterChain();\n  }\n\n  /**\n   * Create the 3-stage filter chain\n   */\n  private createFilterChain(): void {\n    if (!this.config.useFilters) {\n      console.log('üîá [NoiseFilter] Filters disabled - bypassing filter chain');\n      return;\n    }\n\n    try {\n      // 1. Highpass filter (remove low frequency noise: cut below 80Hz)\n      this.highpassFilter = this.audioContext.createBiquadFilter();\n      this.highpassFilter.type = 'highpass';\n      this.highpassFilter.frequency.setValueAtTime(this.config.highpassFreq, this.audioContext.currentTime);\n      this.highpassFilter.Q.setValueAtTime(this.config.highpassQ, this.audioContext.currentTime);\n\n      // 2. Lowpass filter (remove high frequency noise: cut above 800Hz)\n      this.lowpassFilter = this.audioContext.createBiquadFilter();\n      this.lowpassFilter.type = 'lowpass';\n      this.lowpassFilter.frequency.setValueAtTime(this.config.lowpassFreq, this.audioContext.currentTime);\n      this.lowpassFilter.Q.setValueAtTime(this.config.lowpassQ, this.audioContext.currentTime);\n\n      // 3. Notch filter (remove power line noise: 60Hz)\n      this.notchFilter = this.audioContext.createBiquadFilter();\n      this.notchFilter.type = 'notch';\n      this.notchFilter.frequency.setValueAtTime(this.config.notchFreq, this.audioContext.currentTime);\n      this.notchFilter.Q.setValueAtTime(this.config.notchQ, this.audioContext.currentTime);\n\n      console.log('‚úÖ [NoiseFilter] 3-stage filter chain created', {\n        highpass: `${this.config.highpassFreq}Hz (Q=${this.config.highpassQ})`,\n        lowpass: `${this.config.lowpassFreq}Hz (Q=${this.config.lowpassQ})`,\n        notch: `${this.config.notchFreq}Hz (Q=${this.config.notchQ})`\n      });\n\n    } catch (error) {\n      console.error('‚ùå [NoiseFilter] Failed to create filter chain:', error);\n      throw new Error(`NoiseFilter initialization failed: ${error}`);\n    }\n  }\n\n  /**\n   * Connect the filter chain between input and output nodes\n   */\n  connect(inputNode: AudioNode, outputNode?: AudioNode): AudioNode {\n    if (!this.config.useFilters) {\n      // Bypass filtering - direct connection\n      if (outputNode) {\n        inputNode.connect(outputNode);\n      }\n      return inputNode;\n    }\n\n    if (!this.highpassFilter || !this.lowpassFilter || !this.notchFilter) {\n      throw new Error('NoiseFilter not properly initialized');\n    }\n\n    try {\n      // Disconnect any existing connections\n      this.disconnect();\n\n      // Store references\n      this.inputNode = inputNode;\n      this.outputNode = outputNode || null;\n\n      // Create filter chain: input ‚Üí highpass ‚Üí lowpass ‚Üí notch ‚Üí output\n      inputNode.connect(this.highpassFilter);\n      this.highpassFilter.connect(this.lowpassFilter);\n      this.lowpassFilter.connect(this.notchFilter);\n      \n      if (outputNode) {\n        this.notchFilter.connect(outputNode);\n      }\n\n      this.isConnected = true;\n\n      console.log('üîó [NoiseFilter] Filter chain connected');\n      \n      // Return the final node in the chain (notch filter) for further connections\n      return this.notchFilter!;\n\n    } catch (error) {\n      console.error('‚ùå [NoiseFilter] Connection failed:', error);\n      throw new Error(`NoiseFilter connection failed: ${error}`);\n    }\n  }\n\n  /**\n   * Disconnect the filter chain\n   */\n  disconnect(): void {\n    try {\n      if (this.highpassFilter) {\n        this.highpassFilter.disconnect();\n      }\n      if (this.lowpassFilter) {\n        this.lowpassFilter.disconnect();\n      }\n      if (this.notchFilter) {\n        this.notchFilter.disconnect();\n      }\n      \n      this.isConnected = false;\n      this.inputNode = null;\n      this.outputNode = null;\n\n      console.log('üîå [NoiseFilter] Filter chain disconnected');\n\n    } catch (error) {\n      console.warn('‚ö†Ô∏è [NoiseFilter] Disconnect warning:', error);\n    }\n  }\n\n  /**\n   * Update filter parameters dynamically\n   */\n  updateFrequencies(params: {\n    highpassFreq?: number;\n    lowpassFreq?: number;\n    notchFreq?: number;\n    highpassQ?: number;\n    lowpassQ?: number;\n    notchQ?: number;\n  }): void {\n    const currentTime = this.audioContext.currentTime;\n\n    try {\n      if (params.highpassFreq !== undefined && this.highpassFilter) {\n        this.highpassFilter.frequency.setValueAtTime(params.highpassFreq, currentTime);\n        this.config.highpassFreq = params.highpassFreq;\n      }\n\n      if (params.lowpassFreq !== undefined && this.lowpassFilter) {\n        this.lowpassFilter.frequency.setValueAtTime(params.lowpassFreq, currentTime);\n        this.config.lowpassFreq = params.lowpassFreq;\n      }\n\n      if (params.notchFreq !== undefined && this.notchFilter) {\n        this.notchFilter.frequency.setValueAtTime(params.notchFreq, currentTime);\n        this.config.notchFreq = params.notchFreq;\n      }\n\n      if (params.highpassQ !== undefined && this.highpassFilter) {\n        this.highpassFilter.Q.setValueAtTime(params.highpassQ, currentTime);\n        this.config.highpassQ = params.highpassQ;\n      }\n\n      if (params.lowpassQ !== undefined && this.lowpassFilter) {\n        this.lowpassFilter.Q.setValueAtTime(params.lowpassQ, currentTime);\n        this.config.lowpassQ = params.lowpassQ;\n      }\n\n      if (params.notchQ !== undefined && this.notchFilter) {\n        this.notchFilter.Q.setValueAtTime(params.notchQ, currentTime);\n        this.config.notchQ = params.notchQ;\n      }\n\n      console.log('üîß [NoiseFilter] Filter parameters updated:', params);\n\n    } catch (error) {\n      console.error('‚ùå [NoiseFilter] Parameter update failed:', error);\n      throw new Error(`NoiseFilter parameter update failed: ${error}`);\n    }\n  }\n\n  /**\n   * Enable or disable the entire filter chain\n   */\n  setEnabled(enabled: boolean): void {\n    if (enabled === this.config.useFilters) {\n      return; // No change needed\n    }\n\n    this.config.useFilters = enabled;\n\n    if (this.isConnected && this.inputNode) {\n      // Reconnect with new settings\n      const savedOutputNode = this.outputNode;\n      this.disconnect();\n      \n      if (enabled) {\n        // Recreate filters if they were destroyed\n        if (!this.highpassFilter) {\n          this.createFilterChain();\n        }\n      }\n      \n      this.connect(this.inputNode, savedOutputNode || undefined);\n    }\n\n    console.log(`üîò [NoiseFilter] Filters ${enabled ? 'enabled' : 'disabled'}`);\n  }\n\n  /**\n   * Get filter response at specific frequency (for visualization)\n   */\n  getFilterResponse(frequency: number): { magnitude: number; phase: number } {\n    if (!this.config.useFilters || !this.highpassFilter || !this.lowpassFilter || !this.notchFilter) {\n      return { magnitude: 1.0, phase: 0.0 };\n    }\n\n    try {\n      // Create frequency array for single frequency\n      const frequencyArray = new Float32Array([frequency]);\n      const magnitudeArray = new Float32Array(1);\n      const phaseArray = new Float32Array(1);\n\n      // Calculate combined response (simplified - in practice you'd need to chain the calculations)\n      this.highpassFilter.getFrequencyResponse(frequencyArray, magnitudeArray, phaseArray);\n      const highpassMagnitude = magnitudeArray[0];\n      \n      this.lowpassFilter.getFrequencyResponse(frequencyArray, magnitudeArray, phaseArray);\n      const lowpassMagnitude = magnitudeArray[0];\n      \n      this.notchFilter.getFrequencyResponse(frequencyArray, magnitudeArray, phaseArray);\n      const notchMagnitude = magnitudeArray[0];\n\n      // Combined magnitude (multiply individual filter responses)\n      const combinedMagnitude = highpassMagnitude * lowpassMagnitude * notchMagnitude;\n      \n      return { \n        magnitude: combinedMagnitude, \n        phase: phaseArray[0] \n      };\n\n    } catch (error) {\n      console.warn('‚ö†Ô∏è [NoiseFilter] Filter response calculation failed:', error);\n      return { magnitude: 1.0, phase: 0.0 };\n    }\n  }\n\n  /**\n   * Get current filter configuration\n   */\n  getConfig(): Required<NoiseFilterConfig> {\n    return { ...this.config };\n  }\n\n  /**\n   * Get filter chain status\n   */\n  getStatus() {\n    return {\n      isConnected: this.isConnected,\n      useFilters: this.config.useFilters,\n      hasFilters: !!(this.highpassFilter && this.lowpassFilter && this.notchFilter),\n      filterTypes: this.config.useFilters ? ['highpass', 'lowpass', 'notch'] : [],\n      frequencies: {\n        highpass: this.config.highpassFreq,\n        lowpass: this.config.lowpassFreq,\n        notch: this.config.notchFreq\n      },\n      qFactors: {\n        highpass: this.config.highpassQ,\n        lowpass: this.config.lowpassQ,\n        notch: this.config.notchQ\n      }\n    };\n  }\n\n  /**\n   * Get the final output node (for chaining)\n   */\n  getOutputNode(): AudioNode | null {\n    if (!this.config.useFilters || !this.notchFilter) {\n      return this.inputNode || null; // Bypass mode\n    }\n    return this.notchFilter;\n  }\n\n  /**\n   * Cleanup and destroy filter nodes\n   */\n  destroy(): void {\n    console.log('üóëÔ∏è [NoiseFilter] Destroying filter chain');\n    \n    this.disconnect();\n    \n    // Note: Filter nodes are automatically garbage collected\n    // when disconnected and no longer referenced\n    this.highpassFilter = null;\n    this.lowpassFilter = null;\n    this.notchFilter = null;\n    \n    console.log('‚úÖ [NoiseFilter] Cleanup complete');\n  }\n\n  /**\n   * Create a preset configuration for different scenarios\n   */\n  static getPresetConfig(preset: 'voice' | 'instrument' | 'wide' | 'minimal'): NoiseFilterConfig {\n    switch (preset) {\n      case 'voice':\n        return {\n          highpassFreq: 80,   // Remove breath noise\n          lowpassFreq: 800,   // Focus on vocal fundamentals\n          notchFreq: 60,      // Remove power line hum\n          highpassQ: 0.7,\n          lowpassQ: 0.7,\n          notchQ: 10.0,\n          useFilters: true\n        };\n        \n      case 'instrument':\n        return {\n          highpassFreq: 40,   // Preserve low fundamentals\n          lowpassFreq: 2000,  // Allow more harmonics\n          notchFreq: 60,      // Remove power line hum\n          highpassQ: 0.5,\n          lowpassQ: 0.5,\n          notchQ: 8.0,\n          useFilters: true\n        };\n        \n      case 'wide':\n        return {\n          highpassFreq: 20,   // Minimal low cut\n          lowpassFreq: 5000,  // Minimal high cut\n          notchFreq: 60,      // Only power line filtering\n          highpassQ: 0.3,\n          lowpassQ: 0.3,\n          notchQ: 5.0,\n          useFilters: true\n        };\n        \n      case 'minimal':\n        return {\n          highpassFreq: 60,   // Just power line region\n          lowpassFreq: 8000,  // Very high cutoff\n          notchFreq: 60,      // Power line only\n          highpassQ: 0.1,\n          lowpassQ: 0.1,\n          notchQ: 3.0,\n          useFilters: true\n        };\n        \n      default:\n        return {\n          useFilters: false\n        };\n    }\n  }\n}","/**\n * MicrophoneLifecycleManager - Page transition and idle detection microphone control\n * \n * Manages microphone lifecycle across page transitions, idle periods, and redirects\n * Implements reference counting for safe resource management\n * Handles SSR compatibility and automatic recovery\n */\n\nimport type { \n  MediaStreamResources, \n  HealthStatus,\n  LifecycleEvents,\n  StateChangeCallback,\n  ErrorCallback\n} from '../types';\nimport { AudioManager } from './AudioManager';\n\nexport class MicrophoneLifecycleManager {\n  private audioManager: AudioManager;\n  private refCount = 0;\n  private isActive = false;\n  private lastHealthCheck: HealthStatus | null = null;\n  \n  // Monitoring intervals\n  private healthCheckInterval: number | null = null;\n  private idleCheckInterval: number | null = null;\n  private visibilityCheckInterval: number | null = null;\n  \n  // State tracking\n  private lastActivityTime = Date.now();\n  private isPageVisible = true;\n  private isUserActive = true;\n  private autoRecoveryAttempts = 0;\n  private maxAutoRecoveryAttempts = 3;\n  \n  // Event listeners storage for cleanup\n  private eventListeners = new Map<string, EventListener>();\n  \n  // Configuration\n  private config = {\n    healthCheckIntervalMs: 5000,     // 5 seconds\n    idleTimeoutMs: 300000,           // 5 minutes\n    autoRecoveryDelayMs: 2000,       // 2 seconds\n    maxIdleTimeBeforeRelease: 600000 // 10 minutes\n  };\n  \n  // Callbacks\n  private callbacks: {\n    onStateChange?: StateChangeCallback;\n    onError?: ErrorCallback;\n  } = {};\n\n  constructor(audioManager: AudioManager, config: Partial<typeof MicrophoneLifecycleManager.prototype.config> = {}) {\n    this.audioManager = audioManager;\n    this.config = { ...this.config, ...config };\n    \n    // SSR compatibility check\n    if (typeof window === 'undefined') {\n      console.log('üîá [MicrophoneLifecycleManager] SSR environment detected - skipping initialization');\n      return;\n    }\n    \n    this.setupEventListeners();\n  }\n\n  /**\n   * Set callback functions\n   */\n  setCallbacks(callbacks: {\n    onStateChange?: StateChangeCallback;\n    onError?: ErrorCallback;\n  }): void {\n    this.callbacks = { ...this.callbacks, ...callbacks };\n  }\n\n  /**\n   * Acquire microphone resources (with reference counting)\n   */\n  async acquire(): Promise<MediaStreamResources> {\n    this.refCount++;\n    \n    console.log(`üé§ [MicrophoneLifecycleManager] Acquiring resources (refCount: ${this.refCount})`);\n    \n    try {\n      // Initialize AudioManager if not already active\n      if (!this.isActive) {\n        const resources = await this.audioManager.initialize();\n        this.isActive = true;\n        this.lastActivityTime = Date.now();\n        this.autoRecoveryAttempts = 0;\n        \n        // Start monitoring\n        this.startHealthMonitoring();\n        this.startIdleMonitoring();\n        this.startVisibilityMonitoring();\n        \n        this.callbacks.onStateChange?.('active');\n        \n        console.log('üü¢ [MicrophoneLifecycleManager] Microphone activated');\n        return resources;\n      }\n      \n      // Already active - just update activity and return existing resources\n      this.updateActivity();\n      const resources = await this.audioManager.initialize();\n      return resources;\n      \n    } catch (error) {\n      console.error('‚ùå [MicrophoneLifecycleManager] Failed to acquire resources:', error);\n      this.refCount = Math.max(0, this.refCount - 1);\n      this.callbacks.onError?.(error as Error);\n      throw error;\n    }\n  }\n\n  /**\n   * Release microphone resources (with reference counting)\n   */\n  release(): void {\n    this.refCount = Math.max(0, this.refCount - 1);\n    \n    console.log(`üìâ [MicrophoneLifecycleManager] Releasing resources (refCount: ${this.refCount})`);\n    \n    // Only stop monitoring and cleanup when no references remain\n    if (this.refCount <= 0) {\n      this.stopAllMonitoring();\n      this.audioManager.release();\n      this.isActive = false;\n      \n      this.callbacks.onStateChange?.('inactive');\n      \n      console.log('üî¥ [MicrophoneLifecycleManager] Microphone deactivated');\n    }\n  }\n\n  /**\n   * Force release all resources (emergency cleanup)\n   */\n  forceRelease(): void {\n    console.log('üö® [MicrophoneLifecycleManager] Force release - cleaning up all resources');\n    \n    this.refCount = 0;\n    this.stopAllMonitoring();\n    this.audioManager.forceCleanup();\n    this.isActive = false;\n    \n    this.callbacks.onStateChange?.('inactive');\n  }\n\n  /**\n   * Setup page lifecycle event listeners\n   */\n  private setupEventListeners(): void {\n    // Page visibility change\n    const visibilityChangeHandler = () => {\n      this.isPageVisible = !document.hidden;\n      this.handleVisibilityChange();\n    };\n    \n    // User activity tracking\n    const activityHandler = () => {\n      this.updateActivity();\n    };\n    \n    // Page unload / beforeunload\n    const unloadHandler = () => {\n      this.forceRelease();\n    };\n    \n    // Page focus / blur\n    const focusHandler = () => {\n      this.isPageVisible = true;\n      this.handleVisibilityChange();\n    };\n    \n    const blurHandler = () => {\n      this.isPageVisible = false;\n      this.handleVisibilityChange();\n    };\n    \n    // Add event listeners\n    document.addEventListener('visibilitychange', visibilityChangeHandler);\n    document.addEventListener('mousemove', activityHandler);\n    document.addEventListener('keydown', activityHandler);\n    document.addEventListener('click', activityHandler);\n    document.addEventListener('scroll', activityHandler);\n    document.addEventListener('touchstart', activityHandler);\n    window.addEventListener('beforeunload', unloadHandler);\n    window.addEventListener('unload', unloadHandler);\n    window.addEventListener('focus', focusHandler);\n    window.addEventListener('blur', blurHandler);\n    \n    // Store references for cleanup\n    this.eventListeners.set('visibilitychange', visibilityChangeHandler);\n    this.eventListeners.set('mousemove', activityHandler);\n    this.eventListeners.set('keydown', activityHandler);\n    this.eventListeners.set('click', activityHandler);\n    this.eventListeners.set('scroll', activityHandler);\n    this.eventListeners.set('touchstart', activityHandler);\n    this.eventListeners.set('beforeunload', unloadHandler);\n    this.eventListeners.set('unload', unloadHandler);\n    this.eventListeners.set('focus', focusHandler);\n    this.eventListeners.set('blur', blurHandler);\n    \n    console.log('üëÇ [MicrophoneLifecycleManager] Event listeners setup complete');\n  }\n\n  /**\n   * Handle page visibility changes\n   */\n  private handleVisibilityChange(): void {\n    if (!this.isActive) return;\n    \n    if (this.isPageVisible) {\n      console.log('üëÅÔ∏è [MicrophoneLifecycleManager] Page became visible - resuming monitoring');\n      this.updateActivity();\n      \n      // Check microphone health after page becomes visible\n      setTimeout(() => {\n        this.performHealthCheck();\n      }, 1000);\n      \n    } else {\n      console.log('üôà [MicrophoneLifecycleManager] Page became hidden - reducing monitoring frequency');\n      \n      // Consider releasing resources if page stays hidden for too long\n      setTimeout(() => {\n        if (!this.isPageVisible && this.isActive) {\n          const timeSinceActivity = Date.now() - this.lastActivityTime;\n          if (timeSinceActivity > this.config.maxIdleTimeBeforeRelease) {\n            console.log('‚è∞ [MicrophoneLifecycleManager] Long inactivity detected - releasing resources');\n            this.forceRelease();\n          }\n        }\n      }, this.config.maxIdleTimeBeforeRelease);\n    }\n  }\n\n  /**\n   * Update user activity timestamp\n   */\n  private updateActivity(): void {\n    this.lastActivityTime = Date.now();\n    this.isUserActive = true;\n  }\n\n  /**\n   * Start health monitoring\n   */\n  private startHealthMonitoring(): void {\n    if (this.healthCheckInterval) {\n      clearInterval(this.healthCheckInterval);\n    }\n    \n    this.healthCheckInterval = window.setInterval(() => {\n      this.performHealthCheck();\n    }, this.config.healthCheckIntervalMs);\n    \n    console.log(`üíì [MicrophoneLifecycleManager] Health monitoring started (${this.config.healthCheckIntervalMs}ms interval)`);\n  }\n\n  /**\n   * Start idle monitoring\n   */\n  private startIdleMonitoring(): void {\n    if (this.idleCheckInterval) {\n      clearInterval(this.idleCheckInterval);\n    }\n    \n    this.idleCheckInterval = window.setInterval(() => {\n      this.checkIdleTimeout();\n    }, 30000); // Check every 30 seconds\n    \n    console.log('üò¥ [MicrophoneLifecycleManager] Idle monitoring started');\n  }\n\n  /**\n   * Start visibility monitoring\n   */\n  private startVisibilityMonitoring(): void {\n    if (this.visibilityCheckInterval) {\n      clearInterval(this.visibilityCheckInterval);\n    }\n    \n    this.visibilityCheckInterval = window.setInterval(() => {\n      // Additional visibility-based health checks\n      if (this.isPageVisible && this.isActive) {\n        this.performHealthCheck();\n      }\n    }, 10000); // Check every 10 seconds when visible\n    \n    console.log('üëÅÔ∏è [MicrophoneLifecycleManager] Visibility monitoring started');\n  }\n\n  /**\n   * Perform comprehensive health check\n   */\n  private async performHealthCheck(): Promise<void> {\n    if (!this.isActive) return;\n    \n    try {\n      const healthStatus = this.audioManager.checkMediaStreamHealth();\n      this.lastHealthCheck = healthStatus;\n      \n      if (!healthStatus.healthy) {\n        console.warn('‚ö†Ô∏è [MicrophoneLifecycleManager] Unhealthy microphone state detected:', healthStatus);\n        \n        // Attempt automatic recovery\n        if (this.autoRecoveryAttempts < this.maxAutoRecoveryAttempts) {\n          this.autoRecoveryAttempts++;\n          \n          console.log(`üîß [MicrophoneLifecycleManager] Attempting automatic recovery (${this.autoRecoveryAttempts}/${this.maxAutoRecoveryAttempts})`);\n          \n          setTimeout(async () => {\n            try {\n              await this.audioManager.initialize(); // This will trigger re-initialization if needed\n              console.log('‚úÖ [MicrophoneLifecycleManager] Automatic recovery successful');\n              \n              // Dispatch success event\n              this.dispatchCustomEvent('pitchpro:lifecycle:autoRecoverySuccess', {});\n              \n            } catch (error) {\n              console.error('‚ùå [MicrophoneLifecycleManager] Automatic recovery failed:', error);\n              this.callbacks.onError?.(error as Error);\n              \n              // Dispatch failure event\n              this.dispatchCustomEvent('pitchpro:lifecycle:autoRecoveryFailed', { error });\n            }\n          }, this.config.autoRecoveryDelayMs);\n          \n        } else {\n          console.error('‚ùå [MicrophoneLifecycleManager] Maximum recovery attempts reached - manual intervention required');\n          this.callbacks.onError?.(new Error('Microphone health check failed - maximum recovery attempts exceeded'));\n        }\n      }\n      \n    } catch (error) {\n      console.error('‚ùå [MicrophoneLifecycleManager] Health check failed:', error);\n      this.callbacks.onError?.(error as Error);\n    }\n  }\n\n  /**\n   * Check for idle timeout\n   */\n  private checkIdleTimeout(): void {\n    if (!this.isActive) return;\n    \n    const timeSinceActivity = Date.now() - this.lastActivityTime;\n    const isIdle = timeSinceActivity > this.config.idleTimeoutMs;\n    \n    if (isIdle && this.isUserActive) {\n      console.log('üò¥ [MicrophoneLifecycleManager] User idle detected');\n      this.isUserActive = false;\n      \n      // Optionally reduce monitoring frequency during idle\n      // But don't automatically release - let the application decide\n    }\n    \n    // Check for extreme idle (auto-release)\n    if (timeSinceActivity > this.config.maxIdleTimeBeforeRelease) {\n      console.log('‚è∞ [MicrophoneLifecycleManager] Extreme idle detected - auto-releasing resources');\n      this.forceRelease();\n    }\n  }\n\n  /**\n   * Stop all monitoring intervals\n   */\n  private stopAllMonitoring(): void {\n    if (this.healthCheckInterval) {\n      clearInterval(this.healthCheckInterval);\n      this.healthCheckInterval = null;\n    }\n    \n    if (this.idleCheckInterval) {\n      clearInterval(this.idleCheckInterval);\n      this.idleCheckInterval = null;\n    }\n    \n    if (this.visibilityCheckInterval) {\n      clearInterval(this.visibilityCheckInterval);\n      this.visibilityCheckInterval = null;\n    }\n    \n    console.log('‚èπÔ∏è [MicrophoneLifecycleManager] All monitoring stopped');\n  }\n\n  /**\n   * Dispatch custom event\n   */\n  private dispatchCustomEvent(eventName: keyof LifecycleEvents, detail: any): void {\n    if (typeof window === 'undefined') return;\n    \n    const event = new CustomEvent(eventName, { detail });\n    window.dispatchEvent(event);\n  }\n\n  /**\n   * Get current status\n   */\n  getStatus() {\n    return {\n      refCount: this.refCount,\n      isActive: this.isActive,\n      isPageVisible: this.isPageVisible,\n      isUserActive: this.isUserActive,\n      lastActivityTime: this.lastActivityTime,\n      timeSinceActivity: Date.now() - this.lastActivityTime,\n      autoRecoveryAttempts: this.autoRecoveryAttempts,\n      lastHealthCheck: this.lastHealthCheck,\n      audioManagerStatus: this.audioManager.getStatus()\n    };\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(newConfig: Partial<typeof this.config>): void {\n    this.config = { ...this.config, ...newConfig };\n    \n    // Restart monitoring with new intervals if active\n    if (this.isActive) {\n      this.stopAllMonitoring();\n      this.startHealthMonitoring();\n      this.startIdleMonitoring();\n      this.startVisibilityMonitoring();\n    }\n    \n    console.log('üîß [MicrophoneLifecycleManager] Configuration updated:', newConfig);\n  }\n\n  /**\n   * Cleanup and destroy\n   */\n  destroy(): void {\n    console.log('üóëÔ∏è [MicrophoneLifecycleManager] Destroying lifecycle manager');\n    \n    // Stop all monitoring\n    this.stopAllMonitoring();\n    \n    // Force release resources\n    this.forceRelease();\n    \n    // Remove event listeners\n    this.eventListeners.forEach((listener, eventName) => {\n      if (eventName.includes('window:')) {\n        window.removeEventListener(eventName.replace('window:', ''), listener);\n      } else {\n        document.removeEventListener(eventName, listener);\n      }\n    });\n    this.eventListeners.clear();\n    \n    console.log('‚úÖ [MicrophoneLifecycleManager] Cleanup complete');\n  }\n}","/**\n * ErrorNotificationSystem - Framework-agnostic Error Display and Notification\n * \n * Provides error messaging functionality that can be displayed on any page\n * Includes different notification types, auto-hide functionality, and priority management\n * Framework-agnostic implementation using vanilla DOM manipulation\n */\n\nimport type { NotificationConfig, NotificationElement } from '../types';\n\nexport class ErrorNotificationSystem {\n  private container: HTMLElement | null = null;\n  private notifications = new Map<string, NotificationElement>();\n  private notificationCounter = 0;\n  private defaultDuration = 5000; // 5 seconds\n  private maxNotifications = 5;\n  \n  // CSS classes for styling\n  private cssClasses = {\n    container: 'pitchpro-notifications',\n    notification: 'pitchpro-notification',\n    title: 'pitchpro-notification-title',\n    message: 'pitchpro-notification-message',\n    details: 'pitchpro-notification-details',\n    solution: 'pitchpro-notification-solution',\n    closeButton: 'pitchpro-notification-close',\n    error: 'pitchpro-notification-error',\n    warning: 'pitchpro-notification-warning',\n    success: 'pitchpro-notification-success',\n    info: 'pitchpro-notification-info',\n    high: 'pitchpro-notification-priority-high',\n    medium: 'pitchpro-notification-priority-medium',\n    low: 'pitchpro-notification-priority-low'\n  };\n\n  constructor() {\n    // SSR compatibility\n    if (typeof window === 'undefined') {\n      console.log('üîá [ErrorNotificationSystem] SSR environment detected - skipping initialization');\n      return;\n    }\n    \n    this.initializeContainer();\n    this.injectCSS();\n  }\n\n  /**\n   * Create and inject the notification container into the DOM\n   */\n  private initializeContainer(): void {\n    // Check if container already exists\n    let existingContainer = document.querySelector(`.${this.cssClasses.container}`);\n    \n    if (!existingContainer) {\n      this.container = document.createElement('div');\n      this.container.className = this.cssClasses.container;\n      this.container.setAttribute('role', 'alert');\n      this.container.setAttribute('aria-live', 'polite');\n      \n      // Add to document body\n      document.body.appendChild(this.container);\n      \n      console.log('üìã [ErrorNotificationSystem] Notification container created');\n    } else {\n      this.container = existingContainer as HTMLElement;\n      console.log('üìã [ErrorNotificationSystem] Using existing notification container');\n    }\n  }\n\n  /**\n   * Inject default CSS styles\n   */\n  private injectCSS(): void {\n    // Check if styles already exist\n    if (document.querySelector('#pitchpro-notifications-styles')) {\n      return;\n    }\n\n    const css = `\n      .${this.cssClasses.container} {\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        z-index: 10000;\n        max-width: 400px;\n        pointer-events: none;\n      }\n\n      .${this.cssClasses.notification} {\n        background: white;\n        border: 1px solid #e2e8f0;\n        border-radius: 8px;\n        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n        margin-bottom: 12px;\n        padding: 16px;\n        pointer-events: auto;\n        position: relative;\n        animation: slideIn 0.3s ease-out;\n        transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;\n      }\n\n      .${this.cssClasses.notification}.removing {\n        opacity: 0;\n        transform: translateX(100%);\n      }\n\n      @keyframes slideIn {\n        from {\n          opacity: 0;\n          transform: translateX(100%);\n        }\n        to {\n          opacity: 1;\n          transform: translateX(0);\n        }\n      }\n\n      .${this.cssClasses.notification}.${this.cssClasses.error} {\n        border-left: 4px solid #ef4444;\n      }\n\n      .${this.cssClasses.notification}.${this.cssClasses.warning} {\n        border-left: 4px solid #f59e0b;\n      }\n\n      .${this.cssClasses.notification}.${this.cssClasses.success} {\n        border-left: 4px solid #10b981;\n      }\n\n      .${this.cssClasses.notification}.${this.cssClasses.info} {\n        border-left: 4px solid #3b82f6;\n      }\n\n      .${this.cssClasses.title} {\n        font-weight: 600;\n        font-size: 14px;\n        color: #1f2937;\n        margin-bottom: 4px;\n        padding-right: 24px;\n      }\n\n      .${this.cssClasses.message} {\n        font-size: 13px;\n        color: #4b5563;\n        margin-bottom: 8px;\n        line-height: 1.4;\n      }\n\n      .${this.cssClasses.details} {\n        font-size: 12px;\n        color: #6b7280;\n        margin-bottom: 8px;\n        padding-left: 12px;\n        border-left: 2px solid #e5e7eb;\n      }\n\n      .${this.cssClasses.details} li {\n        margin-bottom: 2px;\n      }\n\n      .${this.cssClasses.solution} {\n        font-size: 12px;\n        color: #059669;\n        background: #ecfdf5;\n        border: 1px solid #a7f3d0;\n        border-radius: 4px;\n        padding: 8px;\n        margin-top: 8px;\n      }\n\n      .${this.cssClasses.closeButton} {\n        position: absolute;\n        top: 12px;\n        right: 12px;\n        background: none;\n        border: none;\n        font-size: 18px;\n        color: #9ca3af;\n        cursor: pointer;\n        padding: 0;\n        width: 20px;\n        height: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .${this.cssClasses.closeButton}:hover {\n        color: #6b7280;\n      }\n\n      .${this.cssClasses.notification}.${this.cssClasses.high} {\n        border-width: 2px;\n        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n      }\n\n      @media (max-width: 640px) {\n        .${this.cssClasses.container} {\n          top: 10px;\n          left: 10px;\n          right: 10px;\n          max-width: none;\n        }\n      }\n    `;\n\n    const style = document.createElement('style');\n    style.id = 'pitchpro-notifications-styles';\n    style.textContent = css;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Show a notification\n   */\n  show(config: NotificationConfig): string {\n    if (!this.container) {\n      console.warn('‚ö†Ô∏è [ErrorNotificationSystem] Container not available - cannot show notification');\n      return '';\n    }\n\n    // Generate unique ID\n    const id = `notification-${++this.notificationCounter}`;\n\n    // Create notification element\n    const notification = this.createNotificationElement(id, config);\n\n    // Remove oldest notification if we're at the limit\n    if (this.notifications.size >= this.maxNotifications) {\n      const oldestId = Array.from(this.notifications.keys())[0];\n      this.remove(oldestId);\n    }\n\n    // Add to container and tracking\n    this.container.appendChild(notification);\n    this.notifications.set(id, notification);\n\n    // Auto-hide if configured\n    if (config.autoHide !== false) {\n      const duration = config.duration || this.defaultDuration;\n      setTimeout(() => {\n        this.remove(id);\n      }, duration);\n    }\n\n    console.log(`üì¢ [ErrorNotificationSystem] Notification shown: ${config.type} - ${config.title}`);\n    \n    return id;\n  }\n\n  /**\n   * Create notification DOM element\n   */\n  private createNotificationElement(id: string, config: NotificationConfig): NotificationElement {\n    const notification = document.createElement('div') as unknown as NotificationElement;\n    notification.className = [\n      this.cssClasses.notification,\n      this.cssClasses[config.type],\n      config.priority ? this.cssClasses[config.priority] : ''\n    ].filter(Boolean).join(' ');\n    notification['data-notification-id'] = id;\n\n    // Title\n    const title = document.createElement('div');\n    title.className = this.cssClasses.title;\n    title.textContent = config.title;\n    notification.appendChild(title);\n\n    // Message\n    const message = document.createElement('div');\n    message.className = this.cssClasses.message;\n    message.textContent = config.message;\n    notification.appendChild(message);\n\n    // Details (if provided)\n    if (config.details && config.details.length > 0) {\n      const details = document.createElement('div');\n      details.className = this.cssClasses.details;\n      \n      const list = document.createElement('ul');\n      list.style.margin = '0';\n      list.style.paddingLeft = '16px';\n      \n      config.details.forEach(detail => {\n        const item = document.createElement('li');\n        item.textContent = detail;\n        list.appendChild(item);\n      });\n      \n      details.appendChild(list);\n      notification.appendChild(details);\n    }\n\n    // Solution (if provided)\n    if (config.solution) {\n      const solution = document.createElement('div');\n      solution.className = this.cssClasses.solution;\n      solution.textContent = config.solution;\n      notification.appendChild(solution);\n    }\n\n    // Close button\n    const closeButton = document.createElement('button');\n    closeButton.className = this.cssClasses.closeButton;\n    closeButton.innerHTML = '√ó';\n    closeButton.setAttribute('aria-label', 'Close notification');\n    closeButton.addEventListener('click', () => {\n      this.remove(id);\n    });\n    notification.appendChild(closeButton);\n\n    return notification;\n  }\n\n  /**\n   * Remove a specific notification\n   */\n  remove(id: string): void {\n    const notification = this.notifications.get(id);\n    if (!notification) {\n      return;\n    }\n\n    // Add removing class for exit animation\n    notification.classList.add('removing');\n\n    // Remove from DOM after animation\n    setTimeout(() => {\n      if (notification.parentNode) {\n        notification.parentNode.removeChild(notification);\n      }\n      this.notifications.delete(id);\n    }, 300);\n\n    console.log(`üóëÔ∏è [ErrorNotificationSystem] Notification removed: ${id}`);\n  }\n\n  /**\n   * Clear all notifications\n   */\n  clearAll(): void {\n    const ids = Array.from(this.notifications.keys());\n    ids.forEach(id => this.remove(id));\n    \n    console.log('üßπ [ErrorNotificationSystem] All notifications cleared');\n  }\n\n  /**\n   * Show error notification (convenience method)\n   */\n  showError(title: string, message: string, options: Partial<NotificationConfig> = {}): string {\n    return this.show({\n      type: 'error',\n      title,\n      message,\n      priority: 'high',\n      autoHide: false, // Errors should be manually dismissed\n      ...options\n    });\n  }\n\n  /**\n   * Show warning notification (convenience method)\n   */\n  showWarning(title: string, message: string, options: Partial<NotificationConfig> = {}): string {\n    return this.show({\n      type: 'warning',\n      title,\n      message,\n      priority: 'medium',\n      duration: 8000, // Longer duration for warnings\n      ...options\n    });\n  }\n\n  /**\n   * Show success notification (convenience method)\n   */\n  showSuccess(title: string, message: string, options: Partial<NotificationConfig> = {}): string {\n    return this.show({\n      type: 'success',\n      title,\n      message,\n      priority: 'low',\n      duration: 3000, // Shorter duration for success messages\n      ...options\n    });\n  }\n\n  /**\n   * Show info notification (convenience method)\n   */\n  showInfo(title: string, message: string, options: Partial<NotificationConfig> = {}): string {\n    return this.show({\n      type: 'info',\n      title,\n      message,\n      priority: 'low',\n      ...options\n    });\n  }\n\n  /**\n   * Show microphone error with common solutions\n   */\n  showMicrophoneError(error: Error, context?: string): string {\n    // Common solutions for microphone errors\n    // const commonSolutions = [\n    //   '„Éñ„É©„Ç¶„Ç∂„Å´„Éû„Ç§„ÇØ„Ç¢„ÇØ„Çª„Çπ„ÇíË®±ÂèØ„Åó„Å¶„Åè„Å†„Åï„ÅÑ',\n    //   '„Éû„Ç§„ÇØ„Åå‰ªñ„ÅÆ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åß‰ΩøÁî®„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ„ÅãÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ',\n    //   '„Éñ„É©„Ç¶„Ç∂„ÇíÂÜçËµ∑Âãï„Åó„Å¶ÂÜçÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ',\n    //   '„Éá„Éê„Ç§„Çπ„ÅÆË®≠ÂÆö„Åß„Éû„Ç§„ÇØ„ÅåÊúâÂäπ„Å´„Å™„Å£„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ'\n    // ];\n\n    return this.showError(\n      '„Éû„Ç§„ÇØ„É≠„Éï„Ç©„É≥„Ç®„É©„Éº',\n      `„Éû„Ç§„ÇØ„ÅÆÂàùÊúüÂåñ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü: ${error.message}`,\n      {\n        details: context ? [`Áô∫ÁîüÁÆáÊâÄ: ${context}`, `„Ç®„É©„ÉºË©≥Á¥∞: ${error.name}`] : [`„Ç®„É©„ÉºË©≥Á¥∞: ${error.name}`],\n        solution: '„Éû„Ç§„ÇØ„ÅÆË®≠ÂÆö„ÇíÁ¢∫Ë™ç„Åó„ÄÅ„Éñ„É©„Ç¶„Ç∂„Å´„Éû„Ç§„ÇØ„Ç¢„ÇØ„Çª„Çπ„ÇíË®±ÂèØ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',\n        priority: 'high'\n      }\n    );\n  }\n\n  /**\n   * Show audio context error\n   */\n  showAudioContextError(error: Error): string {\n    return this.showError(\n      '„Ç™„Éº„Éá„Ç£„Ç™„Ç∑„Çπ„ÉÜ„É†„Ç®„É©„Éº',\n      `Èü≥Â£∞Âá¶ÁêÜ„Ç∑„Çπ„ÉÜ„É†„ÅÆÂàùÊúüÂåñ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü: ${error.message}`,\n      {\n        details: [\n          '„Éñ„É©„Ç¶„Ç∂„ÅåWeb Audio API„Å´ÂØæÂøú„Åó„Å¶„ÅÑ„Å™„ÅÑÂèØËÉΩÊÄß„Åå„ÅÇ„Çä„Åæ„Åô',\n          '„Åæ„Åü„ÅØ„ÄÅÈü≥Â£∞„Éá„Éê„Ç§„Çπ„Å´ÂïèÈ°å„ÅåÁô∫Áîü„Åó„Å¶„ÅÑ„Åæ„Åô'\n        ],\n        solution: '„Éñ„É©„Ç¶„Ç∂„ÇíÊúÄÊñ∞Áâà„Å´Êõ¥Êñ∞„Åô„Çã„Åã„ÄÅÂà•„ÅÆ„Éñ„É©„Ç¶„Ç∂„ÅßË©¶„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',\n        priority: 'high'\n      }\n    );\n  }\n\n  /**\n   * Show network/loading error\n   */\n  showLoadingError(resource: string, error: Error): string {\n    return this.showError(\n      'Ë™≠„ÅøËæº„Åø„Ç®„É©„Éº',\n      `${resource}„ÅÆË™≠„ÅøËæº„Åø„Å´Â§±Êïó„Åó„Åæ„Åó„Åü: ${error.message}`,\n      {\n        details: [\n          '„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØÊé•Á∂ö„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ',\n          '„Éñ„É©„Ç¶„Ç∂„ÅÆ„Ç≠„É£„ÉÉ„Ç∑„É•„Çí„ÇØ„É™„Ç¢„Åó„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑ'\n        ],\n        solution: '„Éö„Éº„Ç∏„ÇíÂÜçË™≠„ÅøËæº„Åø„Åô„Çã„Åã„ÄÅ„Åó„Å∞„Çâ„ÅèÂæÖ„Å£„Å¶„Åã„ÇâÂÜçÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ',\n        priority: 'medium'\n      }\n    );\n  }\n\n  /**\n   * Get current notification count\n   */\n  getNotificationCount(): number {\n    return this.notifications.size;\n  }\n\n  /**\n   * Get all notification IDs\n   */\n  getNotificationIds(): string[] {\n    return Array.from(this.notifications.keys());\n  }\n\n  /**\n   * Check if a specific notification exists\n   */\n  hasNotification(id: string): boolean {\n    return this.notifications.has(id);\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(config: {\n    defaultDuration?: number;\n    maxNotifications?: number;\n  }): void {\n    if (config.defaultDuration !== undefined) {\n      this.defaultDuration = config.defaultDuration;\n    }\n    if (config.maxNotifications !== undefined) {\n      this.maxNotifications = config.maxNotifications;\n    }\n    \n    console.log('üîß [ErrorNotificationSystem] Configuration updated:', config);\n  }\n\n  /**\n   * Destroy the notification system\n   */\n  destroy(): void {\n    console.log('üóëÔ∏è [ErrorNotificationSystem] Destroying notification system');\n    \n    this.clearAll();\n    \n    if (this.container && this.container.parentNode) {\n      this.container.parentNode.removeChild(this.container);\n    }\n    \n    // Remove injected CSS\n    const styleElement = document.querySelector('#pitchpro-notifications-styles');\n    if (styleElement && styleElement.parentNode) {\n      styleElement.parentNode.removeChild(styleElement);\n    }\n    \n    this.container = null;\n    this.notifications.clear();\n    \n    console.log('‚úÖ [ErrorNotificationSystem] Cleanup complete');\n  }\n}","/**\n * MicrophoneController - High-level Microphone Management Interface\n * \n * Combines AudioManager, LifecycleManager, and ErrorNotificationSystem\n * Provides a simple, unified API for microphone control with error handling\n * Includes device detection, sensitivity management, and automatic recovery\n */\n\nimport type { \n  DeviceSpecs,\n  MediaStreamResources,\n  MicrophoneControllerEvents,\n  ErrorCallback,\n  StateChangeCallback\n} from '../types';\nimport { AudioManager } from './AudioManager';\nimport { MicrophoneLifecycleManager } from './MicrophoneLifecycleManager';\nimport { ErrorNotificationSystem } from './ErrorNotificationSystem';\n\nexport class MicrophoneController {\n  private audioManager: AudioManager;\n  private lifecycleManager: MicrophoneLifecycleManager;\n  private errorSystem: ErrorNotificationSystem;\n  \n  // State management\n  private currentState: 'uninitialized' | 'initializing' | 'ready' | 'active' | 'error' = 'uninitialized';\n  private isPermissionGranted = false;\n  private lastError: Error | null = null;\n  \n  // Event handling\n  private eventCallbacks: {\n    onStateChange?: StateChangeCallback;\n    onError?: ErrorCallback;\n    onPermissionChange?: (granted: boolean) => void;\n    onSensitivityChange?: (sensitivity: number) => void;\n    onDeviceChange?: (specs: DeviceSpecs) => void;\n  } = {};\n  \n  // Device specifications\n  private deviceSpecs: DeviceSpecs | null = null;\n\n  constructor(\n    audioManagerConfig = {},\n    lifecycleConfig = {},\n    showErrorNotifications = true\n  ) {\n    this.audioManager = new AudioManager(audioManagerConfig);\n    this.lifecycleManager = new MicrophoneLifecycleManager(this.audioManager, lifecycleConfig);\n    this.errorSystem = showErrorNotifications ? new ErrorNotificationSystem() : null as any;\n    \n    this.setupEventHandlers();\n    this.detectDevice();\n  }\n\n  /**\n   * Set callback functions for events\n   */\n  setCallbacks(callbacks: {\n    onStateChange?: StateChangeCallback;\n    onError?: ErrorCallback;\n    onPermissionChange?: (granted: boolean) => void;\n    onSensitivityChange?: (sensitivity: number) => void;\n    onDeviceChange?: (specs: DeviceSpecs) => void;\n  }): void {\n    this.eventCallbacks = { ...this.eventCallbacks, ...callbacks };\n  }\n\n  /**\n   * Setup internal event handlers\n   */\n  private setupEventHandlers(): void {\n    // Lifecycle manager callbacks\n    this.lifecycleManager.setCallbacks({\n      onStateChange: (state) => {\n        this.updateState(state === 'active' ? 'active' : 'ready');\n      },\n      onError: (error) => {\n        this.handleError(error, 'lifecycle');\n      }\n    });\n  }\n\n  /**\n   * Detect device specifications\n   */\n  private detectDevice(): void {\n    this.deviceSpecs = this.audioManager.getPlatformSpecs();\n    console.log('üì± [MicrophoneController] Device detected:', this.deviceSpecs);\n    \n    // Notify callback\n    this.eventCallbacks.onDeviceChange?.(this.deviceSpecs);\n    \n    // Dispatch custom event\n    this.dispatchCustomEvent('pitchpro:deviceDetected', { specs: this.deviceSpecs });\n  }\n\n  /**\n   * Initialize microphone access and permissions\n   */\n  async initialize(): Promise<MediaStreamResources> {\n    try {\n      this.updateState('initializing');\n      console.log('üé§ [MicrophoneController] Starting initialization');\n\n      // Acquire resources through lifecycle manager\n      const resources = await this.lifecycleManager.acquire();\n      \n      // Update state and permissions\n      this.isPermissionGranted = true;\n      this.updateState('ready');\n      this.lastError = null;\n\n      // Notify permission change\n      this.eventCallbacks.onPermissionChange?.(true);\n      this.dispatchCustomEvent('pitchpro:microphoneGranted', { stream: resources.mediaStream });\n\n      console.log('‚úÖ [MicrophoneController] Initialization complete');\n      return resources;\n\n    } catch (error) {\n      console.error('‚ùå [MicrophoneController] Initialization failed:', error);\n      \n      this.isPermissionGranted = false;\n      this.handleError(error as Error, 'initialization');\n      \n      // Notify permission denial\n      this.eventCallbacks.onPermissionChange?.(false);\n      this.dispatchCustomEvent('pitchpro:microphoneDenied', { error: error as Error });\n\n      throw error;\n    }\n  }\n\n  /**\n   * Request microphone permission (alias for initialize)\n   */\n  async requestPermission(): Promise<boolean> {\n    try {\n      await this.initialize();\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Check if microphone permission is granted\n   */\n  async checkPermissionStatus(): Promise<'granted' | 'denied' | 'prompt'> {\n    if (typeof navigator === 'undefined' || !navigator.mediaDevices) {\n      return 'denied';\n    }\n\n    try {\n      const result = await navigator.permissions.query({ name: 'microphone' as PermissionName });\n      return result.state as 'granted' | 'denied' | 'prompt';\n    } catch {\n      // Fallback: try to access microphone with minimal constraints\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ \n          audio: { \n            echoCancellation: false,\n            noiseSuppression: false,\n            autoGainControl: false\n          } \n        });\n        stream.getTracks().forEach(track => track.stop());\n        return 'granted';\n      } catch {\n        return 'denied';\n      }\n    }\n  }\n\n  /**\n   * Stop microphone and release resources\n   */\n  stop(): void {\n    console.log('üõë [MicrophoneController] Stopping microphone');\n    \n    this.lifecycleManager.release();\n    this.updateState('ready');\n    \n    // Dispatch stop event\n    this.dispatchCustomEvent('pitchpro:microphoneStopped', {});\n    \n    console.log('‚úÖ [MicrophoneController] Microphone stopped');\n  }\n\n  /**\n   * Force stop with complete cleanup\n   */\n  forceStop(): void {\n    console.log('üö® [MicrophoneController] Force stopping microphone');\n    \n    this.lifecycleManager.forceRelease();\n    this.updateState('uninitialized');\n    this.isPermissionGranted = false;\n    \n    console.log('‚úÖ [MicrophoneController] Force stop complete');\n  }\n\n  /**\n   * Set microphone sensitivity\n   */\n  setSensitivity(sensitivity: number): void {\n    const oldSensitivity = this.audioManager.getSensitivity();\n    this.audioManager.setSensitivity(sensitivity);\n    const newSensitivity = this.audioManager.getSensitivity();\n    \n    if (oldSensitivity !== newSensitivity) {\n      console.log(`üîß [MicrophoneController] Sensitivity changed: ${oldSensitivity}x ‚Üí ${newSensitivity}x`);\n      \n      // Notify callbacks\n      this.eventCallbacks.onSensitivityChange?.(newSensitivity);\n      this.dispatchCustomEvent('pitchpro:sensitivityChanged', { sensitivity: newSensitivity });\n    }\n  }\n\n  /**\n   * Get current microphone sensitivity\n   */\n  getSensitivity(): number {\n    return this.audioManager.getSensitivity();\n  }\n\n  /**\n   * Get device specifications\n   */\n  getDeviceSpecs(): DeviceSpecs | null {\n    return this.deviceSpecs;\n  }\n\n  /**\n   * Get current state\n   */\n  getState(): string {\n    return this.currentState;\n  }\n\n  /**\n   * Check if microphone is active\n   */\n  isActive(): boolean {\n    return this.currentState === 'active';\n  }\n\n  /**\n   * Check if microphone is ready (initialized but not active)\n   */\n  isReady(): boolean {\n    return this.currentState === 'ready';\n  }\n\n  /**\n   * Check if permission is granted\n   */\n  hasPermission(): boolean {\n    return this.isPermissionGranted;\n  }\n\n  /**\n   * Get comprehensive status\n   */\n  getStatus() {\n    return {\n      state: this.currentState,\n      isPermissionGranted: this.isPermissionGranted,\n      isActive: this.isActive(),\n      isReady: this.isReady(),\n      sensitivity: this.getSensitivity(),\n      deviceSpecs: this.deviceSpecs,\n      lastError: this.lastError,\n      audioManagerStatus: this.audioManager.getStatus(),\n      lifecycleStatus: this.lifecycleManager.getStatus()\n    };\n  }\n\n  /**\n   * Perform health check\n   */\n  checkHealth() {\n    return this.audioManager.checkMediaStreamHealth();\n  }\n\n  /**\n   * Test microphone functionality\n   */\n  async testMicrophone(durationMs = 2000): Promise<{\n    success: boolean;\n    volume: number;\n    frequency: number | null;\n    duration: number;\n    error?: Error;\n  }> {\n    const startTime = Date.now();\n    \n    try {\n      // Ensure we have resources\n      if (!this.isReady() && !this.isActive()) {\n        await this.initialize();\n      }\n      \n      // Create temporary analyser for testing\n      const analyser = this.audioManager.createAnalyser('microphone-test', {\n        fftSize: 1024,\n        smoothingTimeConstant: 0.8\n      });\n      \n      // Collect audio data for specified duration\n      let maxVolume = 0;\n      let detectedFrequency: number | null = null as number | null;\n      const endTime = startTime + durationMs;\n      \n      await new Promise<void>((resolve) => {\n        const checkAudio = () => {\n          if (Date.now() >= endTime) {\n            resolve();\n            return;\n          }\n          \n          // Analyze current audio\n          const bufferLength = analyser.fftSize;\n          const dataArray = new Float32Array(bufferLength);\n          analyser.getFloatTimeDomainData(dataArray);\n          \n          // Calculate RMS volume\n          let sum = 0;\n          for (let i = 0; i < bufferLength; i++) {\n            sum += Math.abs(dataArray[i]);\n          }\n          const rms = Math.sqrt(sum / bufferLength);\n          const volume = rms * 100;\n          \n          if (volume > maxVolume) {\n            maxVolume = volume;\n          }\n          \n          // Simple peak detection for frequency\n          if (volume > 5) { // Only check frequency if there's significant volume\n            let maxIndex = 0;\n            let maxValue = 0;\n            for (let i = 1; i < bufferLength / 2; i++) {\n              const value = Math.abs(dataArray[i]);\n              if (value > maxValue) {\n                maxValue = value;\n                maxIndex = i;\n              }\n            }\n            if (maxIndex > 0) {\n              detectedFrequency = (maxIndex * 44100) / bufferLength;\n            }\n          }\n          \n          requestAnimationFrame(checkAudio);\n        };\n        \n        checkAudio();\n      });\n      \n      // Cleanup test analyser\n      this.audioManager.removeAnalyser('microphone-test');\n      \n      const duration = Date.now() - startTime;\n      const success = maxVolume > 1; // Consider success if we detected some audio\n      \n      const frequencyDisplay = detectedFrequency ? detectedFrequency.toFixed(0) : 'none';\n      console.log(`üß™ [MicrophoneController] Microphone test complete: volume=${maxVolume.toFixed(2)}, frequency=${frequencyDisplay}, duration=${duration}ms`);\n      \n      return {\n        success,\n        volume: maxVolume,\n        frequency: detectedFrequency,\n        duration\n      };\n      \n    } catch (error) {\n      const duration = Date.now() - startTime;\n      console.error('‚ùå [MicrophoneController] Microphone test failed:', error);\n      \n      return {\n        success: false,\n        volume: 0,\n        frequency: null,\n        duration,\n        error: error as Error\n      };\n    }\n  }\n\n  /**\n   * Update internal state and notify\n   */\n  private updateState(newState: typeof this.currentState): void {\n    if (this.currentState !== newState) {\n      const oldState = this.currentState;\n      this.currentState = newState;\n      \n      console.log(`üîÑ [MicrophoneController] State changed: ${oldState} ‚Üí ${newState}`);\n      \n      // Notify callback\n      this.eventCallbacks.onStateChange?.(newState);\n    }\n  }\n\n  /**\n   * Handle errors with notification system\n   */\n  private handleError(error: Error, context: string): void {\n    console.error(`‚ùå [MicrophoneController] Error in ${context}:`, error);\n    \n    this.lastError = error;\n    this.updateState('error');\n    \n    // Show error notification if system is available\n    if (this.errorSystem) {\n      if (context === 'initialization' || context === 'lifecycle') {\n        this.errorSystem.showMicrophoneError(error, context);\n      } else {\n        this.errorSystem.showError(\n          '„Éû„Ç§„ÇØ„Ç®„É©„Éº',\n          `${context}„Åß„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error.message}`,\n          { priority: 'medium' }\n        );\n      }\n    }\n    \n    // Notify error callback\n    this.eventCallbacks.onError?.(error);\n  }\n\n  /**\n   * Dispatch custom DOM event\n   */\n  private dispatchCustomEvent(eventName: keyof MicrophoneControllerEvents, detail: any): void {\n    if (typeof window === 'undefined') return;\n    \n    const event = new CustomEvent(eventName, { detail });\n    window.dispatchEvent(event);\n  }\n\n  /**\n   * Add event listener for microphone events\n   */\n  addEventListener<K extends keyof MicrophoneControllerEvents>(\n    type: K,\n    listener: (event: MicrophoneControllerEvents[K]) => void\n  ): void {\n    if (typeof window === 'undefined') return;\n    \n    window.addEventListener(type, listener as EventListener);\n  }\n\n  /**\n   * Remove event listener for microphone events\n   */\n  removeEventListener<K extends keyof MicrophoneControllerEvents>(\n    type: K,\n    listener: (event: MicrophoneControllerEvents[K]) => void\n  ): void {\n    if (typeof window === 'undefined') return;\n    \n    window.removeEventListener(type, listener as EventListener);\n  }\n\n  /**\n   * Cleanup and destroy all resources\n   */\n  destroy(): void {\n    console.log('üóëÔ∏è [MicrophoneController] Destroying controller');\n    \n    // Force stop to ensure cleanup\n    this.forceStop();\n    \n    // Destroy managed components\n    this.lifecycleManager.destroy();\n    this.errorSystem?.destroy();\n    \n    // Clear callbacks\n    this.eventCallbacks = {};\n    \n    // Reset state\n    this.currentState = 'uninitialized';\n    this.isPermissionGranted = false;\n    this.lastError = null;\n    this.deviceSpecs = null;\n    \n    console.log('‚úÖ [MicrophoneController] Cleanup complete');\n  }\n}"],"names":["AudioManager","config","healthCheck","_a","_b","_c","t","resolve","result","error","deviceSpecs","audioConstraints","tracks","id","options","fftSize","smoothingTimeConstant","minDecibels","maxDecibels","useFilters","analyser","finalNode","filterChain","highpass","lowpass","notch","sensitivity","clampedSensitivity","isIPhone","isIPad","isIPadOS","isIOS","analyserIds","track","index","audioTrack","_d","trackStates","_e","_g","_h","_i","_f","FFT","size","table","i","angle","power","j","shift","revShift","fft","complex","storage","res","input","spectrum","half","out","data","width","step","len","outOff","bitrev","off","inv","quarterLen","limit","k","A","B","C","D","Ar","Ai","Br","Bi","Cr","Ci","Dr","Di","MAr","MAi","tableBr","tableBi","MBr","MBi","tableCr","tableCi","MCr","MCi","tableDr","tableDi","MDr","MDi","T0r","T0i","T1r","T1i","T2r","T2i","T3r","T3i","FAr","FAi","FCr","FCi","FBr","FBi","FDr","FDi","evenR","evenI","oddR","oddI","leftR","leftI","rightR","rightI","step2","step3","halfLen","hquarterLen","ST0r","ST0i","ST1r","ST1i","ST2r","ST2i","ST3r","ST3i","SFAr","SFAi","SFBr","SFBi","SA","SB","Autocorrelator","inputLength","bufferSupplier","__publicField","ceilPow2","length","output","tb","getKeyMaximumIndices","keyIndices","lookingForMaximum","max","maxIndex","refineResultIndex","x0","x1","x2","y0","y1","y2","a","b","c","xMax","yMax","PitchDetector$1","PitchDetector","threshold","volume","db","amplitude","sampleRate","keyMaximumIndices","nMax","resultIndex","refinedResultIndex","clarity","squareSum","m","v","audioManager","callbacks","filteredAnalyserId","rawAnalyserId","PitchyDetector","bufferLength","buffer","rawBuffer","sum","rms","platformSpecs","adjustedRms","volumePercent","rawSum","rawRms","rawVolumePercent","audioContext","pitch","isValidVocalRange","finalFreq","normalizedVolume","displayVolume","frequency","now","confidenceThreshold","historyWindow","h","volumeConfidence","stabilityConfidence","confidence","recentHistory","avgFrequency","avgConfidence","halfFrequency","doubleFrequency","noteNames","semitonesFromA4","noteIndex","octave","nearestSemitone","centsDeviation","enabled","NoiseFilter","inputNode","outputNode","params","currentTime","savedOutputNode","frequencyArray","magnitudeArray","phaseArray","highpassMagnitude","lowpassMagnitude","notchMagnitude","preset","MicrophoneLifecycleManager","resources","visibilityChangeHandler","activityHandler","unloadHandler","focusHandler","blurHandler","healthStatus","timeSinceActivity","eventName","detail","event","newConfig","listener","ErrorNotificationSystem","existingContainer","css","style","notification","oldestId","duration","title","message","details","list","item","solution","closeButton","context","resource","styleElement","MicrophoneController","audioManagerConfig","lifecycleConfig","showErrorNotifications","state","oldSensitivity","newSensitivity","durationMs","startTime","maxVolume","detectedFrequency","endTime","checkAudio","dataArray","maxValue","value","success","frequencyDisplay","newState","oldState","type"],"mappings":"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","x_google_ignoreList":[1,2]}